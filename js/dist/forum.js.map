{"version":3,"sources":["webpack://@glowingblue/password-strength/webpack/bootstrap","webpack://@glowingblue/password-strength/./src/common/index.js","webpack://@glowingblue/password-strength/external \"flarum.core.compat['common/Component']\"","webpack://@glowingblue/password-strength/external \"flarum.core.compat['common/app']\"","webpack://@glowingblue/password-strength/external \"flarum.core.compat['common/utils/Stream']\"","webpack://@glowingblue/password-strength/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@glowingblue/password-strength/external \"flarum.core.compat['common/extend']\"","webpack://@glowingblue/password-strength/external \"flarum.core.compat['common/utils/extractText']\"","webpack://@glowingblue/password-strength/external \"flarum.core.compat['forum/components/LogInModal']\"","webpack://@glowingblue/password-strength/external \"flarum.core.compat['forum/components/SignUpModal']\"","webpack://@glowingblue/password-strength/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@glowingblue/password-strength/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@glowingblue/password-strength/./src/forum/components/EyeButton.js","webpack://@glowingblue/password-strength/./src/forum/components/LogInPasswordField.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/helper.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/data/l33tTable.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/data/adjacencyGraphs.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/data/translationKeys.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/Options.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/matching/Dictionary.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/matching/L33t.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/matching/DictionaryReverse.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/matching/Spatial.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/scoring/utils.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/data/const.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/data/dateSplits.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/scoring/variant/uppercase.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/scoring/variant/l33t.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/scoring/guesses/spatial.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/scoring/estimate.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/scoring/guesses/bruteforce.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/scoring/guesses/dictionary.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/scoring/guesses/repeat.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/scoring/guesses/sequence.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/scoring/guesses/regex.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/scoring/guesses/date.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/scoring.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/matching/Repeat.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/matching/Sequence.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/matching/Regex.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/matching/Date.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/Matching.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/TimeEstimates.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/Feedback.esm.js","webpack://@glowingblue/password-strength/./node_modules/@zxcvbn-ts/core/dist/index.esm.js","webpack://@glowingblue/password-strength/./src/forum/components/StrengthIndicator.js","webpack://@glowingblue/password-strength/./src/forum/components/SignUpPasswordField.js","webpack://@glowingblue/password-strength/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","slug","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","EyeButton","view","showing","this","attrs","className","onclick","icon","Component","app","translator","trans","LogInPasswordField","parent_this","showingPassword","type","placeholder","extractText","bidi","password","disabled","loading","extend","listToExtend","list","push","apply","translate","string","chrMap","split","map","char","join","sorted","matches","sort","m1","m2","j","buildRankedDictionary","orderedList","result","counter","forEach","word","a","b","e","g","x","z","azerty","dvorak","keypad","keypadMac","qwerty","qwertz","warnings","straightRow","keyPattern","simpleRepeat","extendedRepeat","sequences","recentYears","dates","topTen","topHundred","common","similarToCommon","wordByItself","namesByThemselves","commonNames","suggestions","l33t","reverseWords","allUppercase","capitalization","associatedYears","repeated","longerKeyboardPattern","anotherWord","useWords","noNeed","timeEstimation","ltSecond","second","seconds","minute","minutes","hour","hours","day","days","month","months","year","years","centuries","l33tTable","dictionary","userInput","rankedDictionaries","translations","graphs","availableGraphs","setRankedDictionaries","setAdjacencyGraphs","options","setTranslations","checkCustomTranslations","Error","valid","keys","translationType","sanitizedInputs","input","inputType","toString","toLowerCase","adjacencyGraphs","passwordLength","length","passwordLower","dictionaryName","rankedDict","slice","rank","pattern","token","matchedWord","reversed","MatchDictionary","enumeratedSubs","enumerateL33tSubs","relevantL33tSubtable","sub","obj","subbedPassword","match","matchSub","subbedChr","chr","indexOf","subDisplay","k","filter","table","passwordChars","subTable","letter","relevantSubs","tableKeys","getSubs","subDict","l33tChr","subs","firstKey","restKeys","nextSubs","dupL33tIndex","subExtension","concat","subAlternative","splice","newSubs","dedup","deduped","members","assoc","index","label","v","passwordReversed","reverse","SHIFTED_RX","graphName","graph","helper","includes","test","charAt","shiftedCount","lastDirection","turns","checkIfShifted","adjacents","found","foundDirection","curDirection","curChar","adjacentsLength","adjacent","adjacentIndex","count","coEff","log10","Math","log","log2","num","rval","DATE_SPLITS","4","5","6","7","8","START_UPPER","END_UPPER","ALL_UPPER","ALL_UPPER_INVERTED","ALL_LOWER","ALL_LOWER_INVERTED","ONE_UPPER","ONE_LOWER","ALPHA_INVERTED","ALL_DIGIT","REFERENCE_YEAR","Date","getFullYear","REGEXEN","recentYear","cleanedWord","replace","commonCases","commonCasesLength","regex","wordArray","upperCaseCount","lowerCaseCount","variations","variationLength","min","nCk","getVariations","subbed","subbedCount","unsubbedCount","unsubbed","chrs","getCounts","possibilities","estimatePossiblePatterns","startingPosition","average","neighbors","entry","entries","calcAverageDegree","averageDegree","guesses","tokenLength","possibleTurns","estimationFunctions","bruteforce","minGuesses","Number","POSITIVE_INFINITY","MAX_VALUE","MIN_SUBMATCH_GUESSES_SINGLE_CHAR","MIN_SUBMATCH_GUESSES_MULTI_CHAR","max","baseGuesses","uppercaseVariations","l33tVariations","calculation","spatial","unShiftedCount","shiftedVariations","round","repeat","repeatCount","sequence","ascending","firstChr","regexName","regexMatch","charClassBases","alphaLower","alphaUpper","alpha","alphanumeric","digits","symbols","abs","parseInt","date","separator","extraData","getMinGuesses","estimationResult","matchGuesses","guessesLog10","scoringHelper","optimal","excludeAdditive","size","valueType","sequenceLength","estimatedMatch","pi","factorial","shouldSkip","competingPatternLength","competingMetricMatch","passwordCharIndex","makeBruteforceMatch","update","tmp","optimalMatchSequence","temp","candidateSequenceLength","candidateMetricMatch","unshift","matchesByCoordinateJ","fillArray","bruteforceUpdate","unwind","optimalSequenceLength","getGuesses","omniMatch","lastIndex","greedyMatch","getGreedyMatch","lazyMatch","getLazyMatch","baseToken","setMatchToken","getBaseGuesses","greedy","exec","lazy","lazyAnchored","mostGuessableMatchSequence","MAX_DELTA","lastDelta","delta","charCodeAt","absoluteDelta","sequenceName","sequenceSpace","getSequence","regexes","getMatchesWithoutSeparator","getMatchesWithSeparator","filteredMatches","filterNoise","maybeDateWithSeparator","dmy","mapIntegersToDayMonthYear","maybeDateNoSeparator","metric","candidate","candidates","bestCandidate","minDistance","distance","isSubmatch","matchesLength","otherMatch","integers","over12","over31","under1","len1","int","getDayMonth","possibleYearSplits","possibleYearSplitsLength","y","rest","dm","mapIntegersToDayMonth","twoToFourDigitYear","data","matchers","Entry","matcher","times","SECOND","MINUTE","HOUR","DAY","MONTH","century","YEAR","displayStr","undefined","crackTimesSeconds","onlineThrottling100PerHour","onlineNoThrottling10PerSecond","offlineSlowHashing1e4PerSecond","offlineFastHashing1e10PerSecond","crackTimesDisplay","scenario","displayTime","score","guessesToScore","base","timeKeys","foundIndex","findIndex","time","defaultFeedback","warning","setDefaultSuggestions","extraFeedback","longestMatch","getLongestMatch","feedback","getMatchFeedback","isSoleMatch","getDictionaryMatchFeedback","getSpatialMatchFeedback","getRepeatMatchFeedback","getDictionaryWarning","dictName","getDictionaryWarningPassword","getDictionaryWarningWikipedia","getDictionaryWarningNames","getTime","StrengthIndicator","color","active","isPillActive","isInteger","StrengthPill","style","backgroundColor","prfx","settings","forum","attribute","SignUpPasswordField","oninit","vnode","strengthLabel","Stream","passwordScore","strengthColor","hasConfirmFiled","isConfirmFiled","confirmPassword","oninput","inputHandler","borderColor","target","matching","timeEstimates","start","matchSequence","calcTime","attackTimes","estimateAttackTimes","getFeedback","zxcvbn","initializers","add","extendOninit","LogInModal","SignUpModal","items","has"],"mappings":"2BACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,+BClFrD,kCASO,IAAMC,EAAO,iC,cCTpBjC,EAAOD,QAAUmC,OAAOC,KAAKC,OAAO,qB,cCApCpC,EAAOD,QAAUmC,OAAOC,KAAKC,OAAO,e,cCApCpC,EAAOD,QAAUmC,OAAOC,KAAKC,OAAO,wB,cCApCpC,EAAOD,QAAUmC,OAAOC,KAAKC,OAAO,wB,cCApCpC,EAAOD,QAAUmC,OAAOC,KAAKC,OAAO,kB,cCApCpC,EAAOD,QAAUmC,OAAOC,KAAKC,OAAO,6B,cCApCpC,EAAOD,QAAUmC,OAAOC,KAAKC,OAAO,gC,cCApCpC,EAAOD,QAAUmC,OAAOC,KAAKC,OAAO,iC,sHCArB,SAASC,EAAgB3B,EAAGqB,GAMzC,OALAM,EAAkB1B,OAAO2B,gBAAkB,SAAyB5B,EAAGqB,GAErE,OADArB,EAAE6B,UAAYR,EACPrB,IAGcA,EAAGqB,GCLb,SAASS,EAAeC,EAAUC,GAC/CD,EAASZ,UAAYlB,OAAOY,OAAOmB,EAAWb,WAC9CY,EAASZ,UAAUc,YAAcF,EACjC,EAAeA,EAAUC,G,oDCQNE,E,wFACpBC,KAAA,WACC,IAAQC,EAAYC,KAAKC,MAAjBF,QACR,OACC,UAAMG,UAAU,YAAYC,QAAS,kBAAMJ,GAASA,OAClDK,IAAK,cAAaL,IAAY,SAAW,O,GALPM,KCEjCjC,EAAIkC,IAAIC,WAAWC,MAAM9B,KAAK4B,IAAIC,YAEnBE,E,wFACpBX,KAAA,WACC,MAAyCE,KAAKC,MAAtCS,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,gBAErB,OAKC,SAAKT,UAAU,4BACd,WACCA,UAAU,wBACVzC,KAAK,WACLmD,KAAMD,IAAoB,OAAS,WACnCE,YAAaC,IAAY1C,EAAE,2CAC3B2C,KAAML,EAAYM,SAClBC,SAAUP,EAAYQ,UAEvB,EAAC,EAAD,CAAWnB,QAASY,M,GAlBwBN,KChBhD,MACMc,EAAS,CAACC,EAAcC,IAC9BD,EAAaE,KAAKC,MAAMH,EAAcC,GAChCG,EAAY,CAACC,EAAQC,IACPD,EAAOE,MAAM,IACdC,IAAIC,GAAQH,EAAOG,IAASA,GAAMC,KAAK,IAGpDC,EAASC,GAAWA,EAAQC,KAAK,CAACC,EAAIC,IAAOD,EAAGhF,EAAIiF,EAAGjF,GAAKgF,EAAGE,EAAID,EAAGC,GACtEC,EAAwBC,IAC5B,MAAMC,EAAS,GACf,IAAIC,EAAU,EAMd,OAJAF,EAAYG,QAAQC,IAClBH,EAAOG,GAAQF,EACfA,GAAW,IAEND,GCjBT,IAee,EAfC,CACdI,EAAG,CAAC,IAAK,KACTC,EAAG,CAAC,KACJrF,EAAG,CAAC,IAAK,IAAK,IAAK,KACnBsF,EAAG,CAAC,KACJC,EAAG,CAAC,IAAK,KACT5F,EAAG,CAAC,IAAK,IAAK,KACdC,EAAG,CAAC,IAAK,IAAK,KACdQ,EAAG,CAAC,KACJsB,EAAG,CAAC,IAAK,KACTb,EAAG,CAAC,IAAK,KACT2E,EAAG,CAAC,KACJC,EAAG,CAAC,MC6ZS,EAzaF,CACXC,OAAQ,CACN,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,OAEtCC,OAAQ,CACN,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,MAAO,MACrC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,OACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,MAAO,MACrC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,OACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,MACrC,IAAK,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,MACrC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,MAAO,KAAM,MACrC,IAAK,CAAC,KAAM,KAAM,KAAM,MAAO,KAAM,MACrC,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACrC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,MAAO,KAAM,KAAM,KAAM,MACrC,EAAK,CAAC,KAAM,MAAO,KAAM,KAAM,KAAM,MACrC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC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AM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,MAAO,MACrC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,MAAO,MACrC,IAAK,CAAC,KAAM,KAAM,KAAM,MAAO,KAAM,OACrC,IAAK,CAAC,KAAM,KAAM,KAAM,MAAO,KAAM,OACrC,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACrC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,MAAO,KAAM,MACrC,IAAK,CAAC,KAAM,KAAM,KAAM,MAAO,KAAM,MACrC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,MAAO,KAAM,KAAM,MACrC,IAAK,CAAC,KAAM,KAAM,MAAO,KAAM,KAAM,OAEvCC,OAAQ,CACN,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,EAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,KAAM,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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","/*\n * This file is part of glowingblue/password-strength.\n *\n * Copyright (c) 2021 Rafael Horvat.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nexport const slug = 'glowingblue-password-strength';\n","module.exports = flarum.core.compat['common/Component'];","module.exports = flarum.core.compat['common/app'];","module.exports = flarum.core.compat['common/utils/Stream'];","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/utils/extractText'];","module.exports = flarum.core.compat['forum/components/LogInModal'];","module.exports = flarum.core.compat['forum/components/SignUpModal'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","/*\n * This file is part of glowingblue/password-strength.\n *\n * Copyright (c) 2021 Rafael Horvat.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport Component from 'flarum/common/Component';\nimport icon from 'flarum/common/helpers/icon';\n\nexport default class EyeButton extends Component {\n\tview() {\n\t\tconst { showing } = this.attrs;\n\t\treturn (\n\t\t\t<span className='EyeButton' onclick={() => showing(!showing())}>\n\t\t\t\t{icon(`fas fa-eye${showing() ? '-slash' : ''}`)}\n\t\t\t</span>\n\t\t);\n\t}\n}\n","/*\n * This file is part of glowingblue/password-strength.\n *\n * Copyright (c) 2021 Rafael Horvat.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport Component from 'flarum/common/Component';\nimport extractText from 'flarum/common/utils/extractText';\nimport EyeButton from './EyeButton';\n\n// Make translation calls shorter\nconst t = app.translator.trans.bind(app.translator);\n\nexport default class LogInPasswordField extends Component {\n\tview() {\n\t\tconst { parent_this, showingPassword } = this.attrs;\n\n\t\treturn (\n\t\t\t// This markup is copied from `flarum/components/LogInModal` and then\n\t\t\t// some things have been added.\n\t\t\t// !!! Please check for updates regularly !!!\n\n\t\t\t<div className='Form-group PasswordField'>\n\t\t\t\t<input\n\t\t\t\t\tclassName='FormControl togglable'\n\t\t\t\t\tname='password'\n\t\t\t\t\ttype={showingPassword() ? 'text' : 'password'}\n\t\t\t\t\tplaceholder={extractText(t('core.forum.log_in.password_placeholder'))}\n\t\t\t\t\tbidi={parent_this.password}\n\t\t\t\t\tdisabled={parent_this.loading}\n\t\t\t\t/>\n\t\t\t\t<EyeButton showing={showingPassword} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n","const empty = obj => Object.keys(obj).length === 0;\nconst extend = (listToExtend, list) => // eslint-disable-next-line prefer-spread\nlistToExtend.push.apply(listToExtend, list);\nconst translate = (string, chrMap) => {\n  const tempArray = string.split('');\n  return tempArray.map(char => chrMap[char] || char).join('');\n}; // mod implementation that works for negative numbers\n\nconst sorted = matches => matches.sort((m1, m2) => m1.i - m2.i || m1.j - m2.j);\nconst buildRankedDictionary = orderedList => {\n  const result = {};\n  let counter = 1; // rank starts at 1, not 0\n\n  orderedList.forEach(word => {\n    result[word] = counter;\n    counter += 1;\n  });\n  return result;\n};\n\nexport { buildRankedDictionary, empty, extend, sorted, translate };\n//# sourceMappingURL=helper.esm.js.map\n","var l33tTable = {\n  a: ['4', '@'],\n  b: ['8'],\n  c: ['(', '{', '[', '<'],\n  e: ['3'],\n  g: ['6', '9'],\n  i: ['1', '!', '|'],\n  l: ['1', '|', '7'],\n  o: ['0'],\n  s: ['$', '5'],\n  t: ['+', '7'],\n  x: ['%'],\n  z: ['2']\n};\n\nexport default l33tTable;\n//# sourceMappingURL=l33tTable.esm.js.map\n","var graphs = {\n  azerty: {\n    '0': ['ç9', null, null, ')°', 'pP', 'oO'],\n    '1': ['²~', null, null, 'é2', 'aA', null],\n    '2': ['&1', null, null, '\"3', 'zZ', 'aA'],\n    '3': ['é2', null, null, \"'4\", 'eE', 'zZ'],\n    '4': ['\"3', null, null, '(5', 'rR', 'eE'],\n    '5': [\"'4\", null, null, '-6', 'tT', 'rR'],\n    '6': ['(5', null, null, 'è7', 'yY', 'tT'],\n    '7': ['-6', null, null, '_8', 'uU', 'yY'],\n    '8': ['è7', null, null, 'ç9', 'iI', 'uU'],\n    '9': ['_8', null, null, 'à0', 'oO', 'iI'],\n    '²': [null, null, null, '&1', null, null],\n    '~': [null, null, null, '&1', null, null],\n    '&': ['²~', null, null, 'é2', 'aA', null],\n    'é': ['&1', null, null, '\"3', 'zZ', 'aA'],\n    '\"': ['pP', ')°', '+=', '$£', 'ù%', 'mM'],\n    \"'\": ['\"3', null, null, '(5', 'rR', 'eE'],\n    '(': [\"'4\", null, null, '-6', 'tT', 'rR'],\n    '-': ['(5', null, null, 'è7', 'yY', 'tT'],\n    'è': ['-6', null, null, '_8', 'uU', 'yY'],\n    '_': ['è7', null, null, 'ç9', 'iI', 'uU'],\n    'ç': ['_8', null, null, 'à0', 'oO', 'iI'],\n    'à': ['ç9', null, null, ')°', 'pP', 'oO'],\n    ')': ['à0', null, null, '+=', '^\"', 'pP'],\n    '°': ['à0', null, null, '+=', '^\"', 'pP'],\n    '+': [')°', null, null, null, '$£', '^\"'],\n    '=': [')°', null, null, null, '$£', '^\"'],\n    'a': [null, '&1', 'é2', 'zZ', 'qQ', null],\n    'A': [null, '&1', 'é2', 'zZ', 'qQ', null],\n    'z': ['aA', 'é2', '\"3', 'eE', 'sS', 'qQ'],\n    'Z': ['aA', 'é2', '\"3', 'eE', 'sS', 'qQ'],\n    'e': ['zZ', '\"3', \"'4\", 'rR', 'dD', 'sS'],\n    'E': ['zZ', '\"3', \"'4\", 'rR', 'dD', 'sS'],\n    'r': ['eE', \"'4\", '(5', 'tT', 'fF', 'dD'],\n    'R': ['eE', \"'4\", '(5', 'tT', 'fF', 'dD'],\n    't': ['rR', '(5', '-6', 'yY', 'gG', 'fF'],\n    'T': ['rR', '(5', '-6', 'yY', 'gG', 'fF'],\n    'y': ['tT', '-6', 'è7', 'uU', 'hH', 'gG'],\n    'Y': ['tT', '-6', 'è7', 'uU', 'hH', 'gG'],\n    'u': ['yY', 'è7', '_8', 'iI', 'jJ', 'hH'],\n    'U': ['yY', 'è7', '_8', 'iI', 'jJ', 'hH'],\n    'i': ['uU', '_8', 'ç9', 'oO', 'kK', 'jJ'],\n    'I': ['uU', '_8', 'ç9', 'oO', 'kK', 'jJ'],\n    'o': ['iI', 'ç9', 'à0', 'pP', 'lL', 'kK'],\n    'O': ['iI', 'ç9', 'à0', 'pP', 'lL', 'kK'],\n    'p': ['oO', 'à0', ')°', '^\"', 'mM', 'lL'],\n    'P': ['oO', 'à0', ')°', '^\"', 'mM', 'lL'],\n    '^': ['pP', ')°', '+=', '$£', 'ù%', 'mM'],\n    '$': ['^\"', '+=', null, null, '*µ', 'ù%'],\n    '£': ['^\"', '+=', null, null, '*µ', 'ù%'],\n    'q': [null, 'aA', 'zZ', 'sS', 'wW', '<>'],\n    'Q': [null, 'aA', 'zZ', 'sS', 'wW', '<>'],\n    's': ['qQ', 'zZ', 'eE', 'dD', 'xX', 'wW'],\n    'S': ['qQ', 'zZ', 'eE', 'dD', 'xX', 'wW'],\n    'd': ['sS', 'eE', 'rR', 'fF', 'cC', 'xX'],\n    'D': ['sS', 'eE', 'rR', 'fF', 'cC', 'xX'],\n    'f': ['dD', 'rR', 'tT', 'gG', 'vV', 'cC'],\n    'F': ['dD', 'rR', 'tT', 'gG', 'vV', 'cC'],\n    'g': ['fF', 'tT', 'yY', 'hH', 'bB', 'vV'],\n    'G': ['fF', 'tT', 'yY', 'hH', 'bB', 'vV'],\n    'h': ['gG', 'yY', 'uU', 'jJ', 'nN', 'bB'],\n    'H': ['gG', 'yY', 'uU', 'jJ', 'nN', 'bB'],\n    'j': ['hH', 'uU', 'iI', 'kK', ',?', 'nN'],\n    'J': ['hH', 'uU', 'iI', 'kK', ',?', 'nN'],\n    'k': ['jJ', 'iI', 'oO', 'lL', ';.', ',?'],\n    'K': ['jJ', 'iI', 'oO', 'lL', ';.', ',?'],\n    'l': ['kK', 'oO', 'pP', 'mM', ':/', ';.'],\n    'L': ['kK', 'oO', 'pP', 'mM', ':/', ';.'],\n    'm': ['lL', 'pP', '^\"', 'ù%', '!§', ':/'],\n    'M': ['lL', 'pP', '^\"', 'ù%', '!§', ':/'],\n    'ù': ['mM', '^\"', '$£', '*µ', null, '!§'],\n    '%': ['mM', '^\"', '$£', '*µ', null, '!§'],\n    '*': ['ù%', '$£', null, null, null, null],\n    'µ': ['ù%', '$£', null, null, null, null],\n    '<': [null, null, 'qQ', 'wW', null, null],\n    '>': [null, null, 'qQ', 'wW', null, null],\n    'w': ['<>', 'qQ', 'sS', 'xX', null, null],\n    'W': ['<>', 'qQ', 'sS', 'xX', null, null],\n    'x': ['wW', 'sS', 'dD', 'cC', null, null],\n    'X': ['wW', 'sS', 'dD', 'cC', null, null],\n    'c': ['xX', 'dD', 'fF', 'vV', null, null],\n    'C': ['xX', 'dD', 'fF', 'vV', null, null],\n    'v': ['cC', 'fF', 'gG', 'bB', null, null],\n    'V': ['cC', 'fF', 'gG', 'bB', null, null],\n    'b': ['vV', 'gG', 'hH', 'nN', null, null],\n    'B': ['vV', 'gG', 'hH', 'nN', null, null],\n    'n': ['bB', 'hH', 'jJ', ',?', null, null],\n    'N': ['bB', 'hH', 'jJ', ',?', null, null],\n    ',': ['nN', 'jJ', 'kK', ';.', null, null],\n    '?': ['nN', 'jJ', 'kK', ';.', null, null],\n    ';': [',?', 'kK', 'lL', ':/', null, null],\n    '.': [',?', 'kK', 'lL', ':/', null, null],\n    ':': [';.', 'lL', 'mM', '!§', null, null],\n    '/': [';.', 'lL', 'mM', '!§', null, null],\n    '!': [':/', 'mM', 'ù%', null, null, null],\n    '§': [':/', 'mM', 'ù%', null, null, null]\n  },\n  dvorak: {\n    '0': ['9(', null, null, '[{', 'lL', 'rR'],\n    '1': ['`~', null, null, '2@', '\\'\"', null],\n    '2': ['1!', null, null, '3#', ',<', '\\'\"'],\n    '3': ['2@', null, null, '4$', '.>', ',<'],\n    '4': ['3#', null, null, '5%', 'pP', '.>'],\n    '5': ['4$', null, null, '6^', 'yY', 'pP'],\n    '6': ['5%', null, null, '7&', 'fF', 'yY'],\n    '7': ['6^', null, null, '8*', 'gG', 'fF'],\n    '8': ['7&', null, null, '9(', 'cC', 'gG'],\n    '9': ['8*', null, null, '0)', 'rR', 'cC'],\n    '`': [null, null, null, '1!', null, null],\n    '~': [null, null, null, '1!', null, null],\n    '!': ['`~', null, null, '2@', '\\'\"', null],\n    '@': ['1!', null, null, '3#', ',<', '\\'\"'],\n    '#': ['2@', null, null, '4$', '.>', ',<'],\n    '$': ['3#', null, null, '5%', 'pP', '.>'],\n    '%': ['4$', null, null, '6^', 'yY', 'pP'],\n    '^': ['5%', null, null, '7&', 'fF', 'yY'],\n    '&': ['6^', null, null, '8*', 'gG', 'fF'],\n    '*': ['7&', null, null, '9(', 'cC', 'gG'],\n    '(': ['8*', null, null, '0)', 'rR', 'cC'],\n    ')': ['9(', null, null, '[{', 'lL', 'rR'],\n    '[': ['0)', null, null, ']}', '/?', 'lL'],\n    '{': ['0)', null, null, ']}', '/?', 'lL'],\n    ']': ['[{', null, null, null, '=+', '/?'],\n    '}': ['[{', null, null, null, '=+', '/?'],\n    \"'\": [null, '1!', '2@', ',<', 'aA', null],\n    '\"': [null, '1!', '2@', ',<', 'aA', null],\n    ',': ['\\'\"', '2@', '3#', '.>', 'oO', 'aA'],\n    '<': ['\\'\"', '2@', '3#', '.>', 'oO', 'aA'],\n    '.': [',<', '3#', '4$', 'pP', 'eE', 'oO'],\n    '>': [',<', '3#', '4$', 'pP', 'eE', 'oO'],\n    'p': ['.>', '4$', '5%', 'yY', 'uU', 'eE'],\n    'P': ['.>', '4$', '5%', 'yY', 'uU', 'eE'],\n    'y': ['pP', '5%', '6^', 'fF', 'iI', 'uU'],\n    'Y': ['pP', '5%', '6^', 'fF', 'iI', 'uU'],\n    'f': ['yY', '6^', '7&', 'gG', 'dD', 'iI'],\n    'F': ['yY', '6^', '7&', 'gG', 'dD', 'iI'],\n    'g': ['fF', '7&', '8*', 'cC', 'hH', 'dD'],\n    'G': ['fF', '7&', '8*', 'cC', 'hH', 'dD'],\n    'c': ['gG', '8*', '9(', 'rR', 'tT', 'hH'],\n    'C': ['gG', '8*', '9(', 'rR', 'tT', 'hH'],\n    'r': ['cC', '9(', '0)', 'lL', 'nN', 'tT'],\n    'R': ['cC', '9(', '0)', 'lL', 'nN', 'tT'],\n    'l': ['rR', '0)', '[{', '/?', 'sS', 'nN'],\n    'L': ['rR', '0)', '[{', '/?', 'sS', 'nN'],\n    '/': ['lL', '[{', ']}', '=+', '-_', 'sS'],\n    '?': ['lL', '[{', ']}', '=+', '-_', 'sS'],\n    '=': ['/?', ']}', null, '\\\\|', null, '-_'],\n    '+': ['/?', ']}', null, '\\\\|', null, '-_'],\n    '\\\\': ['=+', null, null, null, null, null],\n    '|': ['=+', null, null, null, null, null],\n    'a': [null, '\\'\"', ',<', 'oO', ';:', null],\n    'A': [null, '\\'\"', ',<', 'oO', ';:', null],\n    'o': ['aA', ',<', '.>', 'eE', 'qQ', ';:'],\n    'O': ['aA', ',<', '.>', 'eE', 'qQ', ';:'],\n    'e': ['oO', '.>', 'pP', 'uU', 'jJ', 'qQ'],\n    'E': ['oO', '.>', 'pP', 'uU', 'jJ', 'qQ'],\n    'u': ['eE', 'pP', 'yY', 'iI', 'kK', 'jJ'],\n    'U': ['eE', 'pP', 'yY', 'iI', 'kK', 'jJ'],\n    'i': ['uU', 'yY', 'fF', 'dD', 'xX', 'kK'],\n    'I': ['uU', 'yY', 'fF', 'dD', 'xX', 'kK'],\n    'd': ['iI', 'fF', 'gG', 'hH', 'bB', 'xX'],\n    'D': ['iI', 'fF', 'gG', 'hH', 'bB', 'xX'],\n    'h': ['dD', 'gG', 'cC', 'tT', 'mM', 'bB'],\n    'H': ['dD', 'gG', 'cC', 'tT', 'mM', 'bB'],\n    't': ['hH', 'cC', 'rR', 'nN', 'wW', 'mM'],\n    'T': ['hH', 'cC', 'rR', 'nN', 'wW', 'mM'],\n    'n': ['tT', 'rR', 'lL', 'sS', 'vV', 'wW'],\n    'N': ['tT', 'rR', 'lL', 'sS', 'vV', 'wW'],\n    's': ['nN', 'lL', '/?', '-_', 'zZ', 'vV'],\n    'S': ['nN', 'lL', '/?', '-_', 'zZ', 'vV'],\n    '-': ['sS', '/?', '=+', null, null, 'zZ'],\n    '_': ['sS', '/?', '=+', null, null, 'zZ'],\n    ';': [null, 'aA', 'oO', 'qQ', null, null],\n    ':': [null, 'aA', 'oO', 'qQ', null, null],\n    'q': [';:', 'oO', 'eE', 'jJ', null, null],\n    'Q': [';:', 'oO', 'eE', 'jJ', null, null],\n    'j': ['qQ', 'eE', 'uU', 'kK', null, null],\n    'J': ['qQ', 'eE', 'uU', 'kK', null, null],\n    'k': ['jJ', 'uU', 'iI', 'xX', null, null],\n    'K': ['jJ', 'uU', 'iI', 'xX', null, null],\n    'x': ['kK', 'iI', 'dD', 'bB', null, null],\n    'X': ['kK', 'iI', 'dD', 'bB', null, null],\n    'b': ['xX', 'dD', 'hH', 'mM', null, null],\n    'B': ['xX', 'dD', 'hH', 'mM', null, null],\n    'm': ['bB', 'hH', 'tT', 'wW', null, null],\n    'M': ['bB', 'hH', 'tT', 'wW', null, null],\n    'w': ['mM', 'tT', 'nN', 'vV', null, null],\n    'W': ['mM', 'tT', 'nN', 'vV', null, null],\n    'v': ['wW', 'nN', 'sS', 'zZ', null, null],\n    'V': ['wW', 'nN', 'sS', 'zZ', null, null],\n    'z': ['vV', 'sS', '-_', null, null, null],\n    'Z': ['vV', 'sS', '-_', null, null, null]\n  },\n  keypad: {\n    '0': [null, '1', '2', '3', '.', null, null, null],\n    '1': [null, null, '4', '5', '2', '0', null, null],\n    '2': ['1', '4', '5', '6', '3', '.', '0', null],\n    '3': ['2', '5', '6', null, null, null, '.', '0'],\n    '4': [null, null, '7', '8', '5', '2', '1', null],\n    '5': ['4', '7', '8', '9', '6', '3', '2', '1'],\n    '6': ['5', '8', '9', '+', null, null, '3', '2'],\n    '7': [null, null, null, '/', '8', '5', '4', null],\n    '8': ['7', null, '/', '*', '9', '6', '5', '4'],\n    '9': ['8', '/', '*', '-', '+', null, '6', '5'],\n    '/': [null, null, null, null, '*', '9', '8', '7'],\n    '*': ['/', null, null, null, '-', '+', '9', '8'],\n    '-': ['*', null, null, null, null, null, '+', '9'],\n    '+': ['9', '*', '-', null, null, null, null, '6'],\n    '.': ['0', '2', '3', null, null, null, null, null]\n  },\n  keypadMac: {\n    '0': [null, '1', '2', '3', '.', null, null, null],\n    '1': [null, null, '4', '5', '2', '0', null, null],\n    '2': ['1', '4', '5', '6', '3', '.', '0', null],\n    '3': ['2', '5', '6', '+', null, null, '.', '0'],\n    '4': [null, null, '7', '8', '5', '2', '1', null],\n    '5': ['4', '7', '8', '9', '6', '3', '2', '1'],\n    '6': ['5', '8', '9', '-', '+', null, '3', '2'],\n    '7': [null, null, null, '=', '8', '5', '4', null],\n    '8': ['7', null, '=', '/', '9', '6', '5', '4'],\n    '9': ['8', '=', '/', '*', '-', '+', '6', '5'],\n    '=': [null, null, null, null, '/', '9', '8', '7'],\n    '/': ['=', null, null, null, '*', '-', '9', '8'],\n    '*': ['/', null, null, null, null, null, '-', '9'],\n    '-': ['9', '/', '*', null, null, null, '+', '6'],\n    '+': ['6', '9', '-', null, null, null, null, '3'],\n    '.': ['0', '2', '3', null, null, null, null, null]\n  },\n  qwerty: {\n    '0': ['9(', null, null, '-_', 'pP', 'oO'],\n    '1': ['`~', null, null, '2@', 'qQ', null],\n    '2': ['1!', null, null, '3#', 'wW', 'qQ'],\n    '3': ['2@', null, null, '4$', 'eE', 'wW'],\n    '4': ['3#', null, null, '5%', 'rR', 'eE'],\n    '5': ['4$', null, null, '6^', 'tT', 'rR'],\n    '6': ['5%', null, null, '7&', 'yY', 'tT'],\n    '7': ['6^', null, null, '8*', 'uU', 'yY'],\n    '8': ['7&', null, null, '9(', 'iI', 'uU'],\n    '9': ['8*', null, null, '0)', 'oO', 'iI'],\n    '`': [null, null, null, '1!', null, null],\n    '~': [null, null, null, '1!', null, null],\n    '!': ['`~', null, null, '2@', 'qQ', null],\n    '@': ['1!', null, null, '3#', 'wW', 'qQ'],\n    '#': ['2@', null, null, '4$', 'eE', 'wW'],\n    '$': ['3#', null, null, '5%', 'rR', 'eE'],\n    '%': ['4$', null, null, '6^', 'tT', 'rR'],\n    '^': ['5%', null, null, '7&', 'yY', 'tT'],\n    '&': ['6^', null, null, '8*', 'uU', 'yY'],\n    '*': ['7&', null, null, '9(', 'iI', 'uU'],\n    '(': ['8*', null, null, '0)', 'oO', 'iI'],\n    ')': ['9(', null, null, '-_', 'pP', 'oO'],\n    '-': ['0)', null, null, '=+', '[{', 'pP'],\n    '_': ['0)', null, null, '=+', '[{', 'pP'],\n    '=': ['-_', null, null, null, ']}', '[{'],\n    '+': ['-_', null, null, null, ']}', '[{'],\n    'q': [null, '1!', '2@', 'wW', 'aA', null],\n    'Q': [null, '1!', '2@', 'wW', 'aA', null],\n    'w': ['qQ', '2@', '3#', 'eE', 'sS', 'aA'],\n    'W': ['qQ', '2@', '3#', 'eE', 'sS', 'aA'],\n    'e': ['wW', '3#', '4$', 'rR', 'dD', 'sS'],\n    'E': ['wW', '3#', '4$', 'rR', 'dD', 'sS'],\n    'r': ['eE', '4$', '5%', 'tT', 'fF', 'dD'],\n    'R': ['eE', '4$', '5%', 'tT', 'fF', 'dD'],\n    't': ['rR', '5%', '6^', 'yY', 'gG', 'fF'],\n    'T': ['rR', '5%', '6^', 'yY', 'gG', 'fF'],\n    'y': ['tT', '6^', '7&', 'uU', 'hH', 'gG'],\n    'Y': ['tT', '6^', '7&', 'uU', 'hH', 'gG'],\n    'u': ['yY', '7&', '8*', 'iI', 'jJ', 'hH'],\n    'U': ['yY', '7&', '8*', 'iI', 'jJ', 'hH'],\n    'i': ['uU', '8*', '9(', 'oO', 'kK', 'jJ'],\n    'I': ['uU', '8*', '9(', 'oO', 'kK', 'jJ'],\n    'o': ['iI', '9(', '0)', 'pP', 'lL', 'kK'],\n    'O': ['iI', '9(', '0)', 'pP', 'lL', 'kK'],\n    'p': ['oO', '0)', '-_', '[{', ';:', 'lL'],\n    'P': ['oO', '0)', '-_', '[{', ';:', 'lL'],\n    '[': ['pP', '-_', '=+', ']}', '\\'\"', ';:'],\n    '{': ['pP', '-_', '=+', ']}', '\\'\"', ';:'],\n    ']': ['[{', '=+', null, '\\\\|', null, '\\'\"'],\n    '}': ['[{', '=+', null, '\\\\|', null, '\\'\"'],\n    '\\\\': [']}', null, null, null, null, null],\n    '|': [']}', null, null, null, null, null],\n    'a': [null, 'qQ', 'wW', 'sS', 'zZ', null],\n    'A': [null, 'qQ', 'wW', 'sS', 'zZ', null],\n    's': ['aA', 'wW', 'eE', 'dD', 'xX', 'zZ'],\n    'S': ['aA', 'wW', 'eE', 'dD', 'xX', 'zZ'],\n    'd': ['sS', 'eE', 'rR', 'fF', 'cC', 'xX'],\n    'D': ['sS', 'eE', 'rR', 'fF', 'cC', 'xX'],\n    'f': ['dD', 'rR', 'tT', 'gG', 'vV', 'cC'],\n    'F': ['dD', 'rR', 'tT', 'gG', 'vV', 'cC'],\n    'g': ['fF', 'tT', 'yY', 'hH', 'bB', 'vV'],\n    'G': ['fF', 'tT', 'yY', 'hH', 'bB', 'vV'],\n    'h': ['gG', 'yY', 'uU', 'jJ', 'nN', 'bB'],\n    'H': ['gG', 'yY', 'uU', 'jJ', 'nN', 'bB'],\n    'j': ['hH', 'uU', 'iI', 'kK', 'mM', 'nN'],\n    'J': ['hH', 'uU', 'iI', 'kK', 'mM', 'nN'],\n    'k': ['jJ', 'iI', 'oO', 'lL', ',<', 'mM'],\n    'K': ['jJ', 'iI', 'oO', 'lL', ',<', 'mM'],\n    'l': ['kK', 'oO', 'pP', ';:', '.>', ',<'],\n    'L': ['kK', 'oO', 'pP', ';:', '.>', ',<'],\n    ';': ['lL', 'pP', '[{', '\\'\"', '/?', '.>'],\n    ':': ['lL', 'pP', '[{', '\\'\"', '/?', '.>'],\n    \"'\": [';:', '[{', ']}', null, null, '/?'],\n    '\"': [';:', '[{', ']}', null, null, '/?'],\n    'z': [null, 'aA', 'sS', 'xX', null, null],\n    'Z': [null, 'aA', 'sS', 'xX', null, null],\n    'x': ['zZ', 'sS', 'dD', 'cC', null, null],\n    'X': ['zZ', 'sS', 'dD', 'cC', null, null],\n    'c': ['xX', 'dD', 'fF', 'vV', null, null],\n    'C': ['xX', 'dD', 'fF', 'vV', null, null],\n    'v': ['cC', 'fF', 'gG', 'bB', null, null],\n    'V': ['cC', 'fF', 'gG', 'bB', null, null],\n    'b': ['vV', 'gG', 'hH', 'nN', null, null],\n    'B': ['vV', 'gG', 'hH', 'nN', null, null],\n    'n': ['bB', 'hH', 'jJ', 'mM', null, null],\n    'N': ['bB', 'hH', 'jJ', 'mM', null, null],\n    'm': ['nN', 'jJ', 'kK', ',<', null, null],\n    'M': ['nN', 'jJ', 'kK', ',<', null, null],\n    ',': ['mM', 'kK', 'lL', '.>', null, null],\n    '<': ['mM', 'kK', 'lL', '.>', null, null],\n    '.': [',<', 'lL', ';:', '/?', null, null],\n    '>': [',<', 'lL', ';:', '/?', null, null],\n    '/': ['.>', ';:', '\\'\"', null, null, null],\n    '?': ['.>', ';:', '\\'\"', null, null, null]\n  },\n  qwertz: {\n    '0': ['9)', null, null, 'ß?', 'pP', 'oO'],\n    '1': ['^°', null, null, '2\"', 'qQ', null],\n    '2': ['1!', null, null, '3§', 'wW', 'qQ'],\n    '3': ['2\"', null, null, '4$', 'eE', 'wW'],\n    '4': ['3§', null, null, '5%', 'rR', 'eE'],\n    '5': ['4$', null, null, '6&', 'tT', 'rR'],\n    '6': ['5%', null, null, '7/', 'zZ', 'tT'],\n    '7': ['6&', null, null, '8(', 'uU', 'zZ'],\n    '8': ['7/', null, null, '9)', 'iI', 'uU'],\n    '9': ['8(', null, null, '0=', 'oO', 'iI'],\n    '^': [null, null, null, '1!', null, null],\n    '°': [null, null, null, '1!', null, null],\n    '!': ['^°', null, null, '2\"', 'qQ', null],\n    '\"': ['1!', null, null, '3§', 'wW', 'qQ'],\n    '§': ['2\"', null, null, '4$', 'eE', 'wW'],\n    '$': ['3§', null, null, '5%', 'rR', 'eE'],\n    '%': ['4$', null, null, '6&', 'tT', 'rR'],\n    '&': ['5%', null, null, '7/', 'zZ', 'tT'],\n    '/': ['6&', null, null, '8(', 'uU', 'zZ'],\n    '(': ['7/', null, null, '9)', 'iI', 'uU'],\n    ')': ['8(', null, null, '0=', 'oO', 'iI'],\n    '=': ['9)', null, null, 'ß?', 'pP', 'oO'],\n    'ß': ['0=', null, null, '´`', 'üÜ', 'pP'],\n    '?': ['0=', null, null, '´`', 'üÜ', 'pP'],\n    '´': ['ß?', null, null, null, '+*', 'üÜ'],\n    '`': ['ß?', null, null, null, '+*', 'üÜ'],\n    'q': [null, '1!', '2\"', 'wW', 'aA', null],\n    'Q': [null, '1!', '2\"', 'wW', 'aA', null],\n    'w': ['qQ', '2\"', '3§', 'eE', 'sS', 'aA'],\n    'W': ['qQ', '2\"', '3§', 'eE', 'sS', 'aA'],\n    'e': ['wW', '3§', '4$', 'rR', 'dD', 'sS'],\n    'E': ['wW', '3§', '4$', 'rR', 'dD', 'sS'],\n    'r': ['eE', '4$', '5%', 'tT', 'fF', 'dD'],\n    'R': ['eE', '4$', '5%', 'tT', 'fF', 'dD'],\n    't': ['rR', '5%', '6&', 'zZ', 'gG', 'fF'],\n    'T': ['rR', '5%', '6&', 'zZ', 'gG', 'fF'],\n    'z': ['tT', '6&', '7/', 'uU', 'hH', 'gG'],\n    'Z': ['tT', '6&', '7/', 'uU', 'hH', 'gG'],\n    'u': ['zZ', '7/', '8(', 'iI', 'jJ', 'hH'],\n    'U': ['zZ', '7/', '8(', 'iI', 'jJ', 'hH'],\n    'i': ['uU', '8(', '9)', 'oO', 'kK', 'jJ'],\n    'I': ['uU', '8(', '9)', 'oO', 'kK', 'jJ'],\n    'o': ['iI', '9)', '0=', 'pP', 'lL', 'kK'],\n    'O': ['iI', '9)', '0=', 'pP', 'lL', 'kK'],\n    'p': ['oO', '0=', 'ß?', 'üÜ', 'öÖ', 'lL'],\n    'P': ['oO', '0=', 'ß?', 'üÜ', 'öÖ', 'lL'],\n    'ü': ['pP', 'ß?', '´`', '+*', 'äÄ', 'öÖ'],\n    'Ü': ['pP', 'ß?', '´`', '+*', 'äÄ', 'öÖ'],\n    '+': ['üÜ', '´`', null, null, \"#'\", 'äÄ'],\n    '*': ['üÜ', '´`', null, null, \"#'\", 'äÄ'],\n    'a': [null, 'qQ', 'wW', 'sS', 'yY', '<>'],\n    'A': [null, 'qQ', 'wW', 'sS', 'yY', '<>'],\n    's': ['aA', 'wW', 'eE', 'dD', 'xX', 'yY'],\n    'S': ['aA', 'wW', 'eE', 'dD', 'xX', 'yY'],\n    'd': ['sS', 'eE', 'rR', 'fF', 'cC', 'xX'],\n    'D': ['sS', 'eE', 'rR', 'fF', 'cC', 'xX'],\n    'f': ['dD', 'rR', 'tT', 'gG', 'vV', 'cC'],\n    'F': ['dD', 'rR', 'tT', 'gG', 'vV', 'cC'],\n    'g': ['fF', 'tT', 'zZ', 'hH', 'bB', 'vV'],\n    'G': ['fF', 'tT', 'zZ', 'hH', 'bB', 'vV'],\n    'h': ['gG', 'zZ', 'uU', 'jJ', 'nN', 'bB'],\n    'H': ['gG', 'zZ', 'uU', 'jJ', 'nN', 'bB'],\n    'j': ['hH', 'uU', 'iI', 'kK', 'mM', 'nN'],\n    'J': ['hH', 'uU', 'iI', 'kK', 'mM', 'nN'],\n    'k': ['jJ', 'iI', 'oO', 'lL', ',;', 'mM'],\n    'K': ['jJ', 'iI', 'oO', 'lL', ',;', 'mM'],\n    'l': ['kK', 'oO', 'pP', 'öÖ', '.:', ',;'],\n    'L': ['kK', 'oO', 'pP', 'öÖ', '.:', ',;'],\n    'ö': ['lL', 'pP', 'üÜ', 'äÄ', '-_', '.:'],\n    'Ö': ['lL', 'pP', 'üÜ', 'äÄ', '-_', '.:'],\n    'ä': ['öÖ', 'üÜ', '+*', \"#'\", null, '-_'],\n    'Ä': ['öÖ', 'üÜ', '+*', \"#'\", null, '-_'],\n    '#': ['äÄ', '+*', null, null, null, null],\n    \"'\": ['äÄ', '+*', null, null, null, null],\n    '<': [null, null, 'aA', 'yY', null, null],\n    '>': [null, null, 'aA', 'yY', null, null],\n    'y': ['<>', 'aA', 'sS', 'xX', null, null],\n    'Y': ['<>', 'aA', 'sS', 'xX', null, null],\n    'x': ['yY', 'sS', 'dD', 'cC', null, null],\n    'X': ['yY', 'sS', 'dD', 'cC', null, null],\n    'c': ['xX', 'dD', 'fF', 'vV', null, null],\n    'C': ['xX', 'dD', 'fF', 'vV', null, null],\n    'v': ['cC', 'fF', 'gG', 'bB', null, null],\n    'V': ['cC', 'fF', 'gG', 'bB', null, null],\n    'b': ['vV', 'gG', 'hH', 'nN', null, null],\n    'B': ['vV', 'gG', 'hH', 'nN', null, null],\n    'n': ['bB', 'hH', 'jJ', 'mM', null, null],\n    'N': ['bB', 'hH', 'jJ', 'mM', null, null],\n    'm': ['nN', 'jJ', 'kK', ',;', null, null],\n    'M': ['nN', 'jJ', 'kK', ',;', null, null],\n    ',': ['mM', 'kK', 'lL', '.:', null, null],\n    ';': ['mM', 'kK', 'lL', '.:', null, null],\n    '.': [',;', 'lL', 'öÖ', '-_', null, null],\n    ':': [',;', 'lL', 'öÖ', '-_', null, null],\n    '-': ['.:', 'öÖ', 'äÄ', null, null, null],\n    '_': ['.:', 'öÖ', 'äÄ', null, null, null]\n  }\n};\n\nexport default graphs;\n//# sourceMappingURL=adjacencyGraphs.esm.js.map\n","var translationKeys = {\n  warnings: {\n    straightRow: 'straightRow',\n    keyPattern: 'keyPattern',\n    simpleRepeat: 'simpleRepeat',\n    extendedRepeat: 'extendedRepeat',\n    sequences: 'sequences',\n    recentYears: 'recentYears',\n    dates: 'dates',\n    topTen: 'topTen',\n    topHundred: 'topHundred',\n    common: 'common',\n    similarToCommon: 'similarToCommon',\n    wordByItself: 'wordByItself',\n    namesByThemselves: 'namesByThemselves',\n    commonNames: 'commonNames'\n  },\n  suggestions: {\n    l33t: 'l33t',\n    reverseWords: 'reverseWords',\n    allUppercase: 'allUppercase',\n    capitalization: 'capitalization',\n    dates: 'dates',\n    recentYears: 'recentYears',\n    associatedYears: 'associatedYears',\n    sequences: 'sequences',\n    repeated: 'repeated',\n    longerKeyboardPattern: 'longerKeyboardPattern',\n    anotherWord: 'anotherWord',\n    useWords: 'useWords',\n    noNeed: 'noNeed'\n  },\n  timeEstimation: {\n    ltSecond: 'ltSecond',\n    second: 'second',\n    seconds: 'seconds',\n    minute: 'minute',\n    minutes: 'minutes',\n    hour: 'hour',\n    hours: 'hours',\n    day: 'day',\n    days: 'days',\n    month: 'month',\n    months: 'months',\n    year: 'year',\n    years: 'years',\n    centuries: 'centuries'\n  }\n};\n\nexport default translationKeys;\n//# sourceMappingURL=translationKeys.esm.js.map\n","import { buildRankedDictionary } from './helper.esm.js';\nimport l33tTable from './data/l33tTable.esm.js';\nimport graphs from './data/adjacencyGraphs.esm.js';\nimport translationKeys from './data/translationKeys.esm.js';\n\nclass Options {\n  constructor() {\n    this.l33tTable = l33tTable;\n    this.dictionary = {\n      userInput: []\n    };\n    this.rankedDictionaries = {};\n    this.translations = translationKeys;\n    this.graphs = graphs;\n    this.availableGraphs = [];\n    this.setRankedDictionaries();\n    this.setAdjacencyGraphs(graphs);\n  }\n\n  setOptions(options = {}) {\n    if (options.l33tTable) {\n      this.l33tTable = options.l33tTable;\n    }\n\n    if (options.dictionary) {\n      this.dictionary = options.dictionary;\n      this.setRankedDictionaries();\n    }\n\n    if (options.translations) {\n      this.setTranslations(options.translations);\n    }\n\n    if (options.graphs) {\n      this.setAdjacencyGraphs(options.graphs);\n    }\n  }\n\n  setTranslations(translations) {\n    if (this.checkCustomTranslations(translations)) {\n      this.translations = translations;\n    } else {\n      throw new Error('Invalid translations object fallback to keys');\n    }\n  }\n\n  checkCustomTranslations(translations) {\n    let valid = true;\n    Object.keys(translationKeys).forEach(type => {\n      if (type in translations) {\n        const translationType = type;\n        Object.keys(translationKeys[translationType]).forEach(key => {\n          if (!(key in translations[translationType])) {\n            valid = false;\n          }\n        });\n      } else {\n        valid = false;\n      }\n    });\n    return valid;\n  }\n\n  setRankedDictionaries() {\n    const rankedDictionaries = {};\n    Object.keys(this.dictionary).forEach(name => {\n      const list = this.dictionary[name];\n\n      if (name === 'userInputs') {\n        const sanitizedInputs = [];\n        list.forEach(input => {\n          const inputType = typeof input;\n\n          if (inputType === 'string' || inputType === 'number' || inputType === 'boolean') {\n            sanitizedInputs.push(input.toString().toLowerCase());\n          }\n        });\n        rankedDictionaries[name] = buildRankedDictionary(sanitizedInputs);\n      } else {\n        rankedDictionaries[name] = buildRankedDictionary(list);\n      }\n    });\n    this.rankedDictionaries = rankedDictionaries;\n  }\n\n  setAdjacencyGraphs(adjacencyGraphs) {\n    if (adjacencyGraphs) {\n      this.graphs = adjacencyGraphs;\n      this.availableGraphs = Object.keys(adjacencyGraphs);\n    }\n  }\n\n}\n\nvar Options$1 = new Options();\n\nexport default Options$1;\n//# sourceMappingURL=Options.esm.js.map\n","import { sorted } from '../helper.esm.js';\nimport Options from '../Options.esm.js';\n\nclass MatchDictionary {\n  constructor() {\n    this.rankedDictionaries = {};\n    this.rankedDictionaries = Options.rankedDictionaries;\n  }\n\n  match({\n    password\n  }) {\n    // rankedDictionaries variable is for unit testing purposes\n    const matches = [];\n    const passwordLength = password.length;\n    const passwordLower = password.toLowerCase();\n    Object.keys(this.rankedDictionaries).forEach(dictionaryName => {\n      const rankedDict = this.rankedDictionaries[dictionaryName];\n\n      for (let i = 0; i < passwordLength; i += 1) {\n        for (let j = i; j < passwordLength; j += 1) {\n          if (passwordLower.slice(i, +j + 1 || 9e9) in rankedDict) {\n            const word = passwordLower.slice(i, +j + 1 || 9e9);\n            const rank = rankedDict[word]; // @ts-ignore\n\n            matches.push({\n              pattern: 'dictionary',\n              i,\n              j,\n              token: password.slice(i, +j + 1 || 9e9),\n              matchedWord: word,\n              rank,\n              dictionaryName: dictionaryName,\n              reversed: false,\n              l33t: false\n            });\n          }\n        }\n      }\n    });\n    return sorted(matches);\n  }\n\n}\n\nexport default MatchDictionary;\n//# sourceMappingURL=Dictionary.esm.js.map\n","import { empty, translate, sorted } from '../helper.esm.js';\nimport MatchDictionary from './Dictionary.esm.js';\nimport Options from '../Options.esm.js';\n\n/*\n * -------------------------------------------------------------------------------\n *  date matching ----------------------------------------------------------------\n * -------------------------------------------------------------------------------\n */\n\nclass MatchL33t {\n  constructor() {\n    this.MatchDictionary = new MatchDictionary();\n  }\n\n  match({\n    password\n  }) {\n    const matches = [];\n    const enumeratedSubs = this.enumerateL33tSubs(this.relevantL33tSubtable(password, Options.l33tTable));\n\n    for (let i = 0; i < enumeratedSubs.length; i += 1) {\n      const sub = enumeratedSubs[i]; // corner case: password has no relevant subs.\n\n      if (empty(sub)) {\n        break;\n      }\n\n      const subbedPassword = translate(password, sub);\n      const matchedDictionary = this.MatchDictionary.match({\n        password: subbedPassword\n      });\n      matchedDictionary.forEach(match => {\n        const token = password.slice(match.i, +match.j + 1 || 9e9); // only return the matches that contain an actual substitution\n\n        if (token.toLowerCase() !== match.matchedWord) {\n          // subset of mappings in sub that are in use for this match\n          const matchSub = {};\n          Object.keys(sub).forEach(subbedChr => {\n            const chr = sub[subbedChr];\n\n            if (token.indexOf(subbedChr) !== -1) {\n              matchSub[subbedChr] = chr;\n            }\n          });\n          const subDisplay = Object.keys(matchSub).map(k => `${k} -> ${matchSub[k]}`).join(', ');\n          matches.push({ ...match,\n            l33t: true,\n            token,\n            sub: matchSub,\n            subDisplay\n          });\n        }\n      });\n    } // filter single-character l33t matches to reduce noise.\n    // otherwise '1' matches 'i', '4' matches 'a', both very common English words\n    // with low dictionary rank.\n\n\n    return sorted(matches.filter(match => match.token.length > 1));\n  } // makes a pruned copy of l33t_table that only includes password's possible substitutions\n\n\n  relevantL33tSubtable(password, table) {\n    const passwordChars = {};\n    const subTable = {};\n    password.split('').forEach(char => {\n      passwordChars[char] = true;\n    });\n    Object.keys(table).forEach(letter => {\n      const subs = table[letter];\n      const relevantSubs = subs.filter(sub => sub in passwordChars);\n\n      if (relevantSubs.length > 0) {\n        subTable[letter] = relevantSubs;\n      }\n    });\n    return subTable;\n  } // returns the list of possible 1337 replacement dictionaries for a given password\n\n\n  enumerateL33tSubs(table) {\n    const tableKeys = Object.keys(table);\n    const subs = this.getSubs(tableKeys, [[]], table); // convert from assoc lists to dicts\n\n    return subs.map(sub => {\n      const subDict = {};\n      sub.forEach(([l33tChr, chr]) => {\n        subDict[l33tChr] = chr;\n      });\n      return subDict;\n    });\n  }\n\n  getSubs(keys, subs, table) {\n    if (!keys.length) {\n      return subs;\n    }\n\n    const firstKey = keys[0];\n    const restKeys = keys.slice(1);\n    const nextSubs = [];\n    table[firstKey].forEach(l33tChr => {\n      subs.forEach(sub => {\n        let dupL33tIndex = -1;\n\n        for (let i = 0; i < sub.length; i += 1) {\n          if (sub[i][0] === l33tChr) {\n            dupL33tIndex = i;\n            break;\n          }\n        }\n\n        if (dupL33tIndex === -1) {\n          const subExtension = sub.concat([[l33tChr, firstKey]]);\n          nextSubs.push(subExtension);\n        } else {\n          const subAlternative = sub.slice(0);\n          subAlternative.splice(dupL33tIndex, 1);\n          subAlternative.push([l33tChr, firstKey]);\n          nextSubs.push(sub);\n          nextSubs.push(subAlternative);\n        }\n      });\n    });\n    const newSubs = this.dedup(nextSubs);\n\n    if (restKeys.length) {\n      return this.getSubs(restKeys, newSubs, table);\n    }\n\n    return newSubs;\n  }\n\n  dedup(subs) {\n    const deduped = [];\n    const members = {};\n    subs.forEach(sub => {\n      const assoc = sub.map((k, index) => [k, index]);\n      assoc.sort();\n      const label = assoc.map(([k, v]) => `${k},${v}`).join('-');\n\n      if (!(label in members)) {\n        members[label] = true;\n        deduped.push(sub);\n      }\n    });\n    return deduped;\n  }\n\n}\n\nexport default MatchL33t;\n//# sourceMappingURL=L33t.esm.js.map\n","import { sorted } from '../helper.esm.js';\nimport MatchDictionary from './Dictionary.esm.js';\n\n/*\n * -------------------------------------------------------------------------------\n *  Dictionary reverse ----------------------------------------------------------------\n * -------------------------------------------------------------------------------\n */\n\nclass MatchDictionaryReverse {\n  constructor() {\n    this.MatchDictionary = new MatchDictionary();\n  }\n\n  match({\n    password\n  }) {\n    const passwordReversed = password.split('').reverse().join('');\n    const matches = this.MatchDictionary.match({\n      password: passwordReversed\n    }).map(match => ({ ...match,\n      token: match.token.split('').reverse().join(''),\n      reversed: true,\n      // map coordinates back to original string\n      i: password.length - 1 - match.j,\n      j: password.length - 1 - match.i\n    }));\n    return sorted(matches);\n  }\n\n}\n\nexport default MatchDictionaryReverse;\n//# sourceMappingURL=DictionaryReverse.esm.js.map\n","import { extend, sorted } from '../helper.esm.js';\nimport Options from '../Options.esm.js';\n\n/*\n * ------------------------------------------------------------------------------\n * spatial match (qwerty/dvorak/keypad and so on) -----------------------------------------\n * ------------------------------------------------------------------------------\n */\n\nclass MatchSpatial {\n  constructor() {\n    this.SHIFTED_RX = /[~!@#$%^&*()_+QWERTYUIOP{}|ASDFGHJKL:\"ZXCVBNM<>?]/;\n  }\n\n  match({\n    password\n  }) {\n    const matches = [];\n    Object.keys(Options.graphs).forEach(graphName => {\n      const graph = Options.graphs[graphName];\n      extend(matches, this.helper(password, graph, graphName));\n    });\n    return sorted(matches);\n  }\n\n  checkIfShifted(graphName, password, index) {\n    if (!graphName.includes('keypad') && // initial character is shifted\n    this.SHIFTED_RX.test(password.charAt(index))) {\n      return 1;\n    }\n\n    return 0;\n  } // eslint-disable-next-line complexity, max-statements\n\n\n  helper(password, graph, graphName) {\n    let shiftedCount;\n    const matches = [];\n    let i = 0;\n    const passwordLength = password.length;\n\n    while (i < passwordLength - 1) {\n      let j = i + 1;\n      let lastDirection = 0;\n      let turns = 0;\n      shiftedCount = this.checkIfShifted(graphName, password, i); // eslint-disable-next-line no-constant-condition\n\n      while (true) {\n        const prevChar = password.charAt(j - 1);\n        const adjacents = graph[prevChar] || [];\n        let found = false;\n        let foundDirection = -1;\n        let curDirection = -1; // consider growing pattern by one character if j hasn't gone over the edge.\n\n        if (j < passwordLength) {\n          const curChar = password.charAt(j);\n          const adjacentsLength = adjacents.length;\n\n          for (let k = 0; k < adjacentsLength; k += 1) {\n            const adjacent = adjacents[k];\n            curDirection += 1; // eslint-disable-next-line max-depth\n\n            if (adjacent) {\n              const adjacentIndex = adjacent.indexOf(curChar); // eslint-disable-next-line max-depth\n\n              if (adjacentIndex !== -1) {\n                found = true;\n                foundDirection = curDirection; // eslint-disable-next-line max-depth\n\n                if (adjacentIndex === 1) {\n                  // # index 1 in the adjacency means the key is shifted,\n                  // # 0 means unshifted: A vs a, % vs 5, etc.\n                  // # for example, 'q' is adjacent to the entry '2@'.\n                  // # @ is shifted w/ index 1, 2 is unshifted.\n                  shiftedCount += 1;\n                } // eslint-disable-next-line max-depth\n\n\n                if (lastDirection !== foundDirection) {\n                  // # adding a turn is correct even in the initial\n                  // case when last_direction is null:\n                  // # every spatial pattern starts with a turn.\n                  turns += 1;\n                  lastDirection = foundDirection;\n                }\n\n                break;\n              }\n            }\n          }\n        } // if the current pattern continued, extend j and try to grow again\n\n\n        if (found) {\n          j += 1; // otherwise push the pattern discovered so far, if any...\n        } else {\n          // don't consider length 1 or 2 chains.\n          if (j - i > 2) {\n            // @ts-ignore\n            matches.push({\n              pattern: 'spatial',\n              i,\n              j: j - 1,\n              token: password.slice(i, j),\n              graph: graphName,\n              turns,\n              shiftedCount\n            });\n          } // ...and then start a new search for the rest of the password.\n\n\n          i = j;\n          break;\n        }\n      }\n    }\n\n    return matches;\n  }\n\n}\n\nexport default MatchSpatial;\n//# sourceMappingURL=Spatial.esm.js.map\n","var utils = {\n  // binomial coefficients\n  // src: http://blog.plover.com/math/choose.html\n  nCk(n, k) {\n    let count = n;\n\n    if (k > count) {\n      return 0;\n    }\n\n    if (k === 0) {\n      return 1;\n    }\n\n    let coEff = 1;\n\n    for (let i = 1; i <= k; i += 1) {\n      coEff *= count;\n      coEff /= i;\n      count -= 1;\n    }\n\n    return coEff;\n  },\n\n  log10(n) {\n    return Math.log(n) / Math.log(10); // IE doesn't support Math.log10 :(\n  },\n\n  log2(n) {\n    return Math.log(n) / Math.log(2);\n  },\n\n  factorial(num) {\n    let rval = 1;\n\n    for (let i = 2; i <= num; i += 1) rval *= i;\n\n    return rval;\n  }\n\n};\n\nexport default utils;\n//# sourceMappingURL=utils.esm.js.map\n","import dateSplits from './dateSplits.esm.js';\n\nconst DATE_MAX_YEAR = 2050;\nconst DATE_MIN_YEAR = 1000;\nconst DATE_SPLITS = dateSplits;\nconst BRUTEFORCE_CARDINALITY = 10;\nconst MIN_GUESSES_BEFORE_GROWING_SEQUENCE = 10000;\nconst MIN_SUBMATCH_GUESSES_SINGLE_CHAR = 10;\nconst MIN_SUBMATCH_GUESSES_MULTI_CHAR = 50;\nconst MIN_YEAR_SPACE = 20; // \\xbf-\\xdf is a range for almost all special uppercase letter like Ä and so on\n\nconst START_UPPER = /^[A-Z\\xbf-\\xdf][^A-Z\\xbf-\\xdf]+$/;\nconst END_UPPER = /^[^A-Z\\xbf-\\xdf]+[A-Z\\xbf-\\xdf]$/; // \\xdf-\\xff is a range for almost all special lowercase letter like ä and so on\n\nconst ALL_UPPER = /^[A-Z\\xbf-\\xdf]+$/;\nconst ALL_UPPER_INVERTED = /^[^a-z\\xdf-\\xff]+$/;\nconst ALL_LOWER = /^[a-z\\xdf-\\xff]+$/;\nconst ALL_LOWER_INVERTED = /^[^A-Z\\xbf-\\xdf]+$/;\nconst ONE_UPPER = /[a-z\\xdf-\\xff]/;\nconst ONE_LOWER = /[A-Z\\xbf-\\xdf]/;\nconst ALPHA_INVERTED = /[^A-Za-z\\xbf-\\xdf]/gi;\nconst ALL_DIGIT = /^\\d+$/;\nconst REFERENCE_YEAR = new Date().getFullYear();\nconst REGEXEN = {\n  recentYear: /19\\d\\d|200\\d|201\\d|202\\d/g\n};\n\nexport { ALL_DIGIT, ALL_LOWER, ALL_LOWER_INVERTED, ALL_UPPER, ALL_UPPER_INVERTED, ALPHA_INVERTED, BRUTEFORCE_CARDINALITY, DATE_MAX_YEAR, DATE_MIN_YEAR, DATE_SPLITS, END_UPPER, MIN_GUESSES_BEFORE_GROWING_SEQUENCE, MIN_SUBMATCH_GUESSES_MULTI_CHAR, MIN_SUBMATCH_GUESSES_SINGLE_CHAR, MIN_YEAR_SPACE, ONE_LOWER, ONE_UPPER, REFERENCE_YEAR, REGEXEN, START_UPPER };\n//# sourceMappingURL=const.esm.js.map\n","var dateSplits = {\n  4: [[1, 2], [2, 3]],\n  5: [[1, 3], [2, 3]],\n  6: [[1, 2], [2, 4], [4, 5]],\n  7: [[1, 3], [2, 3], [4, 5], [4, 6]],\n  8: [[2, 4], [4, 6]]\n};\n\nexport default dateSplits;\n//# sourceMappingURL=dateSplits.esm.js.map\n","import utils from '../utils.esm.js';\nimport { ALPHA_INVERTED, ALL_LOWER_INVERTED, ONE_UPPER, ONE_LOWER, START_UPPER, END_UPPER, ALL_UPPER_INVERTED } from '../../data/const.esm.js';\n\nconst getVariations = cleanedWord => {\n  const wordArray = cleanedWord.split('');\n  const upperCaseCount = wordArray.filter(char => char.match(ONE_UPPER)).length;\n  const lowerCaseCount = wordArray.filter(char => char.match(ONE_LOWER)).length;\n  let variations = 0;\n  const variationLength = Math.min(upperCaseCount, lowerCaseCount);\n\n  for (let i = 1; i <= variationLength; i += 1) {\n    variations += utils.nCk(upperCaseCount + lowerCaseCount, i);\n  }\n\n  return variations;\n};\n\nvar uppercaseVariant = (word => {\n  // clean words of non alpha characters to remove the reward effekt to capitalize the first letter https://github.com/dropbox/zxcvbn/issues/232\n  const cleanedWord = word.replace(ALPHA_INVERTED, '');\n\n  if (cleanedWord.match(ALL_LOWER_INVERTED) || cleanedWord.toLowerCase() === cleanedWord) {\n    return 1;\n  } // a capitalized word is the most common capitalization scheme,\n  // so it only doubles the search space (uncapitalized + capitalized).\n  // allcaps and end-capitalized are common enough too, underestimate as 2x factor to be safe.\n\n\n  const commonCases = [START_UPPER, END_UPPER, ALL_UPPER_INVERTED];\n  const commonCasesLength = commonCases.length;\n\n  for (let i = 0; i < commonCasesLength; i += 1) {\n    const regex = commonCases[i];\n\n    if (cleanedWord.match(regex)) {\n      return 2;\n    }\n  } // otherwise calculate the number of ways to capitalize U+L uppercase+lowercase letters\n  // with U uppercase letters or less. or, if there's more uppercase than lower (for eg. PASSwORD),\n  // the number of ways to lowercase U+L letters with L lowercase letters or less.\n\n\n  return getVariations(cleanedWord);\n});\n\nexport default uppercaseVariant;\n//# sourceMappingURL=uppercase.esm.js.map\n","import utils from '../utils.esm.js';\n\nconst getCounts = ({\n  subs,\n  subbed,\n  token\n}) => {\n  const unsubbed = subs[subbed]; // lower-case match.token before calculating: capitalization shouldn't affect l33t calc.\n\n  const chrs = token.toLowerCase().split(''); // num of subbed chars\n\n  const subbedCount = chrs.filter(char => char === subbed).length; // num of unsubbed chars\n\n  const unsubbedCount = chrs.filter(char => char === unsubbed).length;\n  return {\n    subbedCount,\n    unsubbedCount\n  };\n};\n\nvar l33tVariant = (({\n  l33t,\n  sub,\n  token\n}) => {\n  if (!l33t) {\n    return 1;\n  }\n\n  let variations = 1;\n  const subs = sub;\n  Object.keys(subs).forEach(subbed => {\n    const {\n      subbedCount,\n      unsubbedCount\n    } = getCounts({\n      subs,\n      subbed,\n      token\n    });\n\n    if (subbedCount === 0 || unsubbedCount === 0) {\n      // for this sub, password is either fully subbed (444) or fully unsubbed (aaa)\n      // treat that as doubling the space (attacker needs to try fully subbed chars in addition to\n      // unsubbed.)\n      variations *= 2;\n    } else {\n      // this case is similar to capitalization:\n      // with aa44a, U = 3, S = 2, attacker needs to try unsubbed + one sub + two subs\n      const p = Math.min(unsubbedCount, subbedCount);\n      let possibilities = 0;\n\n      for (let i = 1; i <= p; i += 1) {\n        possibilities += utils.nCk(unsubbedCount + subbedCount, i);\n      }\n\n      variations *= possibilities;\n    }\n  });\n  return variations;\n});\n\nexport default l33tVariant;\n//# sourceMappingURL=l33t.esm.js.map\n","import utils from '../utils.esm.js';\nimport Options from '../../Options.esm.js';\n\nconst calcAverageDegree = graph => {\n  let average = 0;\n  Object.keys(graph).forEach(key => {\n    const neighbors = graph[key];\n    average += neighbors.filter(entry => !!entry).length;\n  });\n  average /= Object.entries(graph).length;\n  return average;\n};\n\nconst estimatePossiblePatterns = ({\n  token,\n  graph,\n  turns\n}) => {\n  const startingPosition = calcAverageDegree(Options.graphs[graph]);\n  const averageDegree = Object.keys(Options.graphs[graph]).length;\n  let guesses = 0;\n  const tokenLength = token.length; // # estimate the number of possible patterns w/ tokenLength or less with turns or less.\n\n  for (let i = 2; i <= tokenLength; i += 1) {\n    const possibleTurns = Math.min(turns, i - 1);\n\n    for (let j = 1; j <= possibleTurns; j += 1) {\n      guesses += utils.nCk(i - 1, j - 1) * startingPosition * averageDegree ** j;\n    }\n  }\n\n  return guesses;\n};\n\nvar spatialGuesses = (({\n  graph,\n  token,\n  shiftedCount,\n  turns\n}) => {\n  let guesses = estimatePossiblePatterns({\n    token,\n    graph,\n    turns\n  }); // add extra guesses for shifted keys. (% instead of 5, A instead of a.)\n  // math is similar to extra guesses of l33t substitutions in dictionary matches.\n\n  if (shiftedCount) {\n    const unShiftedCount = token.length - shiftedCount;\n\n    if (shiftedCount === 0 || unShiftedCount === 0) {\n      guesses *= 2;\n    } else {\n      let shiftedVariations = 0;\n\n      for (let i = 1; i <= Math.min(shiftedCount, unShiftedCount); i += 1) {\n        shiftedVariations += utils.nCk(shiftedCount + unShiftedCount, i);\n      }\n\n      guesses *= shiftedVariations;\n    }\n  }\n\n  return Math.round(guesses);\n});\n\nexport default spatialGuesses;\n//# sourceMappingURL=spatial.esm.js.map\n","import { MIN_SUBMATCH_GUESSES_SINGLE_CHAR, MIN_SUBMATCH_GUESSES_MULTI_CHAR } from '../data/const.esm.js';\nimport bruteforceGuesses from './guesses/bruteforce.esm.js';\nimport dateGuesses from './guesses/date.esm.js';\nimport dictionaryGuesses from './guesses/dictionary.esm.js';\nimport regexGuesses from './guesses/regex.esm.js';\nimport repeatGuesses from './guesses/repeat.esm.js';\nimport sequenceGuesses from './guesses/sequence.esm.js';\nimport spatialGuesses from './guesses/spatial.esm.js';\nimport utils from './utils.esm.js';\n\nconst estimationFunctions = {\n  bruteforce: bruteforceGuesses,\n  dictionary: dictionaryGuesses,\n  spatial: spatialGuesses,\n  repeat: repeatGuesses,\n  sequence: sequenceGuesses,\n  regex: regexGuesses,\n  date: dateGuesses\n};\n\nconst getMinGuesses = (match, password) => {\n  let minGuesses = 1;\n\n  if (match.token.length < password.length) {\n    if (match.token.length === 1) {\n      minGuesses = MIN_SUBMATCH_GUESSES_SINGLE_CHAR;\n    } else {\n      minGuesses = MIN_SUBMATCH_GUESSES_MULTI_CHAR;\n    }\n  }\n\n  return minGuesses;\n}; // ------------------------------------------------------------------------------\n// guess estimation -- one function per match pattern ---------------------------\n// ------------------------------------------------------------------------------\n\n\nvar estimateGuesses = ((match, password) => {\n  const extraData = {}; // a match's guess estimate doesn't change. cache it.\n\n  if ('guesses' in match && match.guesses != null) {\n    return match;\n  }\n\n  const minGuesses = getMinGuesses(match, password); // @ts-ignore\n\n  const estimationResult = estimationFunctions[match.pattern](match);\n  let guesses = 0;\n\n  if (typeof estimationResult === 'number') {\n    guesses = estimationResult;\n  } else if (match.pattern === 'dictionary') {\n    guesses = estimationResult.calculation;\n    extraData.baseGuesses = estimationResult.baseGuesses;\n    extraData.uppercaseVariations = estimationResult.uppercaseVariations;\n    extraData.l33tVariations = estimationResult.l33tVariations;\n  }\n\n  const matchGuesses = Math.max(guesses, minGuesses);\n  return { ...match,\n    ...extraData,\n    guesses: matchGuesses,\n    guessesLog10: utils.log10(matchGuesses)\n  };\n});\n\nexport default estimateGuesses;\n//# sourceMappingURL=estimate.esm.js.map\n","import { BRUTEFORCE_CARDINALITY, MIN_SUBMATCH_GUESSES_SINGLE_CHAR, MIN_SUBMATCH_GUESSES_MULTI_CHAR } from '../../data/const.esm.js';\n\nvar bruteforceGuesses = (({\n  token\n}) => {\n  let guesses = BRUTEFORCE_CARDINALITY ** token.length;\n\n  if (guesses === Number.POSITIVE_INFINITY) {\n    guesses = Number.MAX_VALUE;\n  }\n\n  let minGuesses; // small detail: make bruteforce matches at minimum one guess bigger than smallest allowed\n  // submatch guesses, such that non-bruteforce submatches over the same [i..j] take precedence.\n\n  if (token.length === 1) {\n    minGuesses = MIN_SUBMATCH_GUESSES_SINGLE_CHAR + 1;\n  } else {\n    minGuesses = MIN_SUBMATCH_GUESSES_MULTI_CHAR + 1;\n  }\n\n  return Math.max(guesses, minGuesses);\n});\n\nexport default bruteforceGuesses;\n//# sourceMappingURL=bruteforce.esm.js.map\n","import uppercaseVariant from '../variant/uppercase.esm.js';\nimport l33tVariant from '../variant/l33t.esm.js';\n\nvar dictionaryGuesses = (({\n  rank,\n  reversed,\n  l33t,\n  sub,\n  token\n}) => {\n  const baseGuesses = rank; // keep these as properties for display purposes\n\n  const uppercaseVariations = uppercaseVariant(token);\n  const l33tVariations = l33tVariant({\n    l33t,\n    sub,\n    token\n  });\n  const reversedVariations = reversed && 2 || 1;\n  const calculation = baseGuesses * uppercaseVariations * l33tVariations * reversedVariations;\n  return {\n    baseGuesses,\n    uppercaseVariations,\n    l33tVariations,\n    calculation\n  };\n});\n\nexport default dictionaryGuesses;\n//# sourceMappingURL=dictionary.esm.js.map\n","var repeatGuesses = (({\n  baseGuesses,\n  repeatCount\n}) => baseGuesses * repeatCount);\n\nexport default repeatGuesses;\n//# sourceMappingURL=repeat.esm.js.map\n","var sequenceGuesses = (({\n  token,\n  ascending\n}) => {\n  const firstChr = token.charAt(0);\n  let baseGuesses = 0;\n  const startingPoints = ['a', 'A', 'z', 'Z', '0', '1', '9']; // lower guesses for obvious starting points\n\n  if (startingPoints.includes(firstChr)) {\n    baseGuesses = 4;\n  } else if (firstChr.match(/\\d/)) {\n    baseGuesses = 10; // digits\n  } else {\n    // could give a higher base for uppercase,\n    // assigning 26 to both upper and lower sequences is more conservative.\n    baseGuesses = 26;\n  } // need to try a descending sequence in addition to every ascending sequence ->\n  // 2x guesses\n\n\n  if (!ascending) {\n    baseGuesses *= 2;\n  }\n\n  return baseGuesses * token.length;\n});\n\nexport default sequenceGuesses;\n//# sourceMappingURL=sequence.esm.js.map\n","import { REFERENCE_YEAR, MIN_YEAR_SPACE } from '../../data/const.esm.js';\n\nvar regexGuesses = (({\n  regexName,\n  regexMatch,\n  token\n}) => {\n  const charClassBases = {\n    alphaLower: 26,\n    alphaUpper: 26,\n    alpha: 52,\n    alphanumeric: 62,\n    digits: 10,\n    symbols: 33\n  };\n\n  if (regexName in charClassBases) {\n    return charClassBases[regexName] ** token.length;\n  } // TODO add more regex types for example special dates like 09.11\n  // eslint-disable-next-line default-case\n\n\n  switch (regexName) {\n    case 'recentYear':\n      // conservative estimate of year space: num years from REFERENCE_YEAR.\n      // if year is close to REFERENCE_YEAR, estimate a year space of MIN_YEAR_SPACE.\n      return Math.max(Math.abs(parseInt(regexMatch[0], 10) - REFERENCE_YEAR), MIN_YEAR_SPACE);\n  }\n\n  return 0;\n});\n\nexport default regexGuesses;\n//# sourceMappingURL=regex.esm.js.map\n","import { REFERENCE_YEAR, MIN_YEAR_SPACE } from '../../data/const.esm.js';\n\nvar dateGuesses = (({\n  year,\n  separator\n}) => {\n  // base guesses: (year distance from REFERENCE_YEAR) * num_days * num_years\n  const yearSpace = Math.max(Math.abs(year - REFERENCE_YEAR), MIN_YEAR_SPACE);\n  let guesses = yearSpace * 365; // add factor of 4 for separator selection (one of ~4 choices)\n\n  if (separator) {\n    guesses *= 4;\n  }\n\n  return guesses;\n});\n\nexport default dateGuesses;\n//# sourceMappingURL=date.esm.js.map\n","import utils from './scoring/utils.esm.js';\nimport estimateGuesses from './scoring/estimate.esm.js';\nimport { MIN_GUESSES_BEFORE_GROWING_SEQUENCE } from './data/const.esm.js';\n\nconst scoringHelper = {\n  password: '',\n  optimal: {},\n  excludeAdditive: false,\n\n  fillArray(size, valueType) {\n    const result = [];\n\n    for (let i = 0; i < size; i += 1) {\n      let value = [];\n\n      if (valueType === 'object') {\n        value = {};\n      }\n\n      result.push(value);\n    }\n\n    return result;\n  },\n\n  // helper: make bruteforce match objects spanning i to j, inclusive.\n  makeBruteforceMatch(i, j) {\n    return {\n      pattern: 'bruteforce',\n      token: this.password.slice(i, +j + 1 || 9e9),\n      i,\n      j\n    };\n  },\n\n  // helper: considers whether a length-sequenceLength\n  // sequence ending at match m is better (fewer guesses)\n  // than previously encountered sequences, updating state if so.\n  update(match, sequenceLength) {\n    const k = match.j;\n    const estimatedMatch = estimateGuesses(match, this.password);\n    let pi = estimatedMatch.guesses;\n\n    if (sequenceLength > 1) {\n      // we're considering a length-sequenceLength sequence ending with match m:\n      // obtain the product term in the minimization function by multiplying m's guesses\n      // by the product of the length-(sequenceLength-1)\n      // sequence ending just before m, at m.i - 1.\n      pi *= this.optimal.pi[estimatedMatch.i - 1][sequenceLength - 1];\n    } // calculate the minimization func\n\n\n    let g = utils.factorial(sequenceLength) * pi;\n\n    if (!this.excludeAdditive) {\n      g += MIN_GUESSES_BEFORE_GROWING_SEQUENCE ** (sequenceLength - 1);\n    } // update state if new best.\n    // first see if any competing sequences covering this prefix,\n    // with sequenceLength or fewer matches,\n    // fare better than this sequence. if so, skip it and return.\n\n\n    let shouldSkip = false;\n    Object.keys(this.optimal.g[k]).forEach(competingPatternLength => {\n      const competingMetricMatch = this.optimal.g[k][competingPatternLength];\n\n      if (parseInt(competingPatternLength, 10) <= sequenceLength) {\n        if (competingMetricMatch <= g) {\n          shouldSkip = true;\n        }\n      }\n    });\n\n    if (!shouldSkip) {\n      // this sequence might be part of the final optimal sequence.\n      this.optimal.g[k][sequenceLength] = g;\n      this.optimal.m[k][sequenceLength] = estimatedMatch;\n      this.optimal.pi[k][sequenceLength] = pi;\n    }\n  },\n\n  // helper: evaluate bruteforce matches ending at passwordCharIndex.\n  bruteforceUpdate(passwordCharIndex) {\n    // see if a single bruteforce match spanning the passwordCharIndex-prefix is optimal.\n    let match = this.makeBruteforceMatch(0, passwordCharIndex);\n    this.update(match, 1);\n\n    for (let i = 1; i <= passwordCharIndex; i += 1) {\n      // generate passwordCharIndex bruteforce matches, spanning from (i=1, j=passwordCharIndex) up to (i=passwordCharIndex, j=passwordCharIndex).\n      // see if adding these new matches to any of the sequences in optimal[i-1]\n      // leads to new bests.\n      match = this.makeBruteforceMatch(i, passwordCharIndex);\n      const tmp = this.optimal.m[i - 1]; // eslint-disable-next-line no-loop-func\n\n      Object.keys(tmp).forEach(sequenceLength => {\n        const lastMatch = tmp[sequenceLength]; // corner: an optimal sequence will never have two adjacent bruteforce matches.\n        // it is strictly better to have a single bruteforce match spanning the same region:\n        // same contribution to the guess product with a lower length.\n        // --> safe to skip those cases.\n\n        if (lastMatch.pattern !== 'bruteforce') {\n          // try adding m to this length-sequenceLength sequence.\n          this.update(match, parseInt(sequenceLength, 10) + 1);\n        }\n      });\n    }\n  },\n\n  // helper: step backwards through optimal.m starting at the end,\n  // constructing the final optimal match sequence.\n  unwind(passwordLength) {\n    const optimalMatchSequence = [];\n    let k = passwordLength - 1; // find the final best sequence length and score\n\n    let sequenceLength = 0;\n    let g = 2e308;\n    const temp = this.optimal.g[k];\n    Object.keys(this.optimal.g[k]).forEach(candidateSequenceLength => {\n      const candidateMetricMatch = temp[candidateSequenceLength];\n\n      if (candidateMetricMatch < g) {\n        sequenceLength = parseInt(candidateSequenceLength, 10);\n        g = candidateMetricMatch;\n      }\n    });\n\n    while (k >= 0) {\n      const match = this.optimal.m[k][sequenceLength];\n      optimalMatchSequence.unshift(match);\n      k = match.i - 1;\n      sequenceLength -= 1;\n    }\n\n    return optimalMatchSequence;\n  }\n\n};\nvar scoring = {\n  // ------------------------------------------------------------------------------\n  // search --- most guessable match sequence -------------------------------------\n  // ------------------------------------------------------------------------------\n  //\n  // takes a sequence of overlapping matches, returns the non-overlapping sequence with\n  // minimum guesses. the following is a O(l_max * (n + m)) dynamic programming algorithm\n  // for a length-n password with m candidate matches. l_max is the maximum optimal\n  // sequence length spanning each prefix of the password. In practice it rarely exceeds 5 and the\n  // search terminates rapidly.\n  //\n  // the optimal \"minimum guesses\" sequence is here defined to be the sequence that\n  // minimizes the following function:\n  //\n  //    g = sequenceLength! * Product(m.guesses for m in sequence) + D^(sequenceLength - 1)\n  //\n  // where sequenceLength is the length of the sequence.\n  //\n  // the factorial term is the number of ways to order sequenceLength patterns.\n  //\n  // the D^(sequenceLength-1) term is another length penalty, roughly capturing the idea that an\n  // attacker will try lower-length sequences first before trying length-sequenceLength sequences.\n  //\n  // for example, consider a sequence that is date-repeat-dictionary.\n  //  - an attacker would need to try other date-repeat-dictionary combinations,\n  //    hence the product term.\n  //  - an attacker would need to try repeat-date-dictionary, dictionary-repeat-date,\n  //    ..., hence the factorial term.\n  //  - an attacker would also likely try length-1 (dictionary) and length-2 (dictionary-date)\n  //    sequences before length-3. assuming at minimum D guesses per pattern type,\n  //    D^(sequenceLength-1) approximates Sum(D^i for i in [1..sequenceLength-1]\n  //\n  // ------------------------------------------------------------------------------\n  mostGuessableMatchSequence(password, matches, excludeAdditive = false) {\n    scoringHelper.password = password;\n    scoringHelper.excludeAdditive = excludeAdditive;\n    const passwordLength = password.length; // partition matches into sublists according to ending index j\n\n    let matchesByCoordinateJ = scoringHelper.fillArray(passwordLength, 'array');\n    matches.forEach(match => {\n      matchesByCoordinateJ[match.j].push(match);\n    }); // small detail: for deterministic output, sort each sublist by i.\n\n    matchesByCoordinateJ = matchesByCoordinateJ.map(match => match.sort((m1, m2) => m1.i - m2.i));\n    scoringHelper.optimal = {\n      // optimal.m[k][sequenceLength] holds final match in the best length-sequenceLength\n      // match sequence covering the\n      // password prefix up to k, inclusive.\n      // if there is no length-sequenceLength sequence that scores better (fewer guesses) than\n      // a shorter match sequence spanning the same prefix,\n      // optimal.m[k][sequenceLength] is undefined.\n      m: scoringHelper.fillArray(passwordLength, 'object'),\n      // same structure as optimal.m -- holds the product term Prod(m.guesses for m in sequence).\n      // optimal.pi allows for fast (non-looping) updates to the minimization function.\n      pi: scoringHelper.fillArray(passwordLength, 'object'),\n      // same structure as optimal.m -- holds the overall metric.\n      g: scoringHelper.fillArray(passwordLength, 'object')\n    };\n\n    for (let k = 0; k < passwordLength; k += 1) {\n      matchesByCoordinateJ[k].forEach(match => {\n        if (match.i > 0) {\n          Object.keys(scoringHelper.optimal.m[match.i - 1]).forEach(sequenceLength => {\n            scoringHelper.update(match, parseInt(sequenceLength, 10) + 1);\n          });\n        } else {\n          scoringHelper.update(match, 1);\n        }\n      });\n      scoringHelper.bruteforceUpdate(k);\n    }\n\n    const optimalMatchSequence = scoringHelper.unwind(passwordLength);\n    const optimalSequenceLength = optimalMatchSequence.length;\n    const guesses = this.getGuesses(password, optimalSequenceLength);\n    return {\n      password,\n      guesses,\n      guessesLog10: utils.log10(guesses),\n      sequence: optimalMatchSequence\n    };\n  },\n\n  getGuesses(password, optimalSequenceLength) {\n    const passwordLength = password.length;\n    let guesses = 0;\n\n    if (password.length === 0) {\n      guesses = 1;\n    } else {\n      guesses = scoringHelper.optimal.g[passwordLength - 1][optimalSequenceLength];\n    }\n\n    return guesses;\n  }\n\n};\n\nexport default scoring;\n//# sourceMappingURL=scoring.esm.js.map\n","import scoring from '../scoring.esm.js';\n\n/*\n *-------------------------------------------------------------------------------\n * repeats (aaa, abcabcabc) ------------------------------\n *-------------------------------------------------------------------------------\n */\n\nclass MatchRepeat {\n  match({\n    password,\n    omniMatch\n  }) {\n    const matches = [];\n    let lastIndex = 0;\n\n    while (lastIndex < password.length) {\n      const greedyMatch = this.getGreedyMatch(password, lastIndex);\n      const lazyMatch = this.getLazyMatch(password, lastIndex);\n\n      if (greedyMatch == null) {\n        break;\n      }\n\n      const {\n        match,\n        baseToken\n      } = this.setMatchToken(greedyMatch, lazyMatch);\n\n      if (match) {\n        const j = match.index + match[0].length - 1;\n        const baseGuesses = this.getBaseGuesses(baseToken, omniMatch); // @ts-ignore\n\n        matches.push({\n          pattern: 'repeat',\n          i: match.index,\n          j,\n          token: match[0],\n          baseToken,\n          baseGuesses,\n          repeatCount: match[0].length / baseToken.length\n        });\n        lastIndex = j + 1;\n      }\n    }\n\n    return matches;\n  }\n\n  getGreedyMatch(password, lastIndex) {\n    const greedy = /(.+)\\1+/g;\n    greedy.lastIndex = lastIndex;\n    return greedy.exec(password);\n  }\n\n  getLazyMatch(password, lastIndex) {\n    const lazy = /(.+?)\\1+/g;\n    lazy.lastIndex = lastIndex;\n    return lazy.exec(password);\n  }\n\n  setMatchToken(greedyMatch, lazyMatch) {\n    const lazyAnchored = /^(.+?)\\1+$/;\n    let match;\n    let baseToken = '';\n\n    if (lazyMatch && greedyMatch[0].length > lazyMatch[0].length) {\n      // greedy beats lazy for 'aabaab'\n      // greedy: [aabaab, aab]\n      // lazy:   [aa,     a]\n      match = greedyMatch; // greedy's repeated string might itself be repeated, eg.\n      // aabaab in aabaabaabaab.\n      // run an anchored lazy match on greedy's repeated string\n      // to find the shortest repeated string\n\n      const temp = lazyAnchored.exec(match[0]);\n\n      if (temp) {\n        baseToken = temp[1];\n      }\n    } else {\n      // lazy beats greedy for 'aaaaa'\n      // greedy: [aaaa,  aa]\n      // lazy:   [aaaaa, a]\n      match = lazyMatch;\n\n      if (match) {\n        baseToken = match[1];\n      }\n    }\n\n    return {\n      match,\n      baseToken\n    };\n  }\n\n  getBaseGuesses(baseToken, omniMatch) {\n    const baseAnalysis = scoring.mostGuessableMatchSequence(baseToken, omniMatch.match(baseToken));\n    return baseAnalysis.guesses;\n  }\n\n}\n\nexport default MatchRepeat;\n//# sourceMappingURL=Repeat.esm.js.map\n","import { ALL_LOWER, ALL_UPPER, ALL_DIGIT } from '../data/const.esm.js';\n\n/*\n *-------------------------------------------------------------------------------\n * sequences (abcdef) ------------------------------\n *-------------------------------------------------------------------------------\n */\n\nclass MatchSequence {\n  constructor() {\n    this.MAX_DELTA = 5;\n  } // eslint-disable-next-line max-statements\n\n\n  match({\n    password\n  }) {\n    /*\n     * Identifies sequences by looking for repeated differences in unicode codepoint.\n     * this allows skipping, such as 9753, and also matches some extended unicode sequences\n     * such as Greek and Cyrillic alphabets.\n     *\n     * for example, consider the input 'abcdb975zy'\n     *\n     * password: a   b   c   d   b    9   7   5   z   y\n     * index:    0   1   2   3   4    5   6   7   8   9\n     * delta:      1   1   1  -2  -41  -2  -2  69   1\n     *\n     * expected result:\n     * [(i, j, delta), ...] = [(0, 3, 1), (5, 7, -2), (8, 9, 1)]\n     */\n    const result = [];\n\n    if (password.length === 1) {\n      return [];\n    }\n\n    let i = 0;\n    let lastDelta = null;\n    const passwordLength = password.length;\n\n    for (let k = 1; k < passwordLength; k += 1) {\n      const delta = password.charCodeAt(k) - password.charCodeAt(k - 1);\n\n      if (lastDelta == null) {\n        lastDelta = delta;\n      }\n\n      if (delta !== lastDelta) {\n        const j = k - 1;\n        this.update({\n          i,\n          j,\n          delta: lastDelta,\n          password,\n          result\n        });\n        i = j;\n        lastDelta = delta;\n      }\n    }\n\n    this.update({\n      i,\n      j: passwordLength - 1,\n      delta: lastDelta,\n      password,\n      result\n    });\n    return result;\n  }\n\n  update({\n    i,\n    j,\n    delta,\n    password,\n    result\n  }) {\n    if (j - i > 1 || Math.abs(delta) === 1) {\n      const absoluteDelta = Math.abs(delta);\n\n      if (absoluteDelta > 0 && absoluteDelta <= this.MAX_DELTA) {\n        const token = password.slice(i, +j + 1 || 9e9);\n        const {\n          sequenceName,\n          sequenceSpace\n        } = this.getSequence(token);\n        return result.push({\n          pattern: 'sequence',\n          i,\n          j,\n          token: password.slice(i, +j + 1 || 9e9),\n          sequenceName,\n          sequenceSpace,\n          ascending: delta > 0\n        });\n      }\n    }\n\n    return null;\n  }\n\n  getSequence(token) {\n    // TODO conservatively stick with roman alphabet size.\n    //  (this could be improved)\n    let sequenceName = 'unicode';\n    let sequenceSpace = 26;\n\n    if (ALL_LOWER.test(token)) {\n      sequenceName = 'lower';\n      sequenceSpace = 26;\n    } else if (ALL_UPPER.test(token)) {\n      sequenceName = 'upper';\n      sequenceSpace = 26;\n    } else if (ALL_DIGIT.test(token)) {\n      sequenceName = 'digits';\n      sequenceSpace = 10;\n    }\n\n    return {\n      sequenceName,\n      sequenceSpace\n    };\n  }\n\n}\n\nexport default MatchSequence;\n//# sourceMappingURL=Sequence.esm.js.map\n","import { REGEXEN } from '../data/const.esm.js';\nimport { sorted } from '../helper.esm.js';\n\n/*\n * -------------------------------------------------------------------------------\n *  regex matching ---------------------------------------------------------------\n * -------------------------------------------------------------------------------\n */\n\nclass MatchRegex {\n  match({\n    password,\n    regexes = REGEXEN\n  }) {\n    const matches = [];\n    Object.keys(regexes).forEach(name => {\n      const regex = regexes[name];\n      regex.lastIndex = 0; // keeps regexMatch stateless\n\n      const regexMatch = regex.exec(password);\n\n      if (regexMatch) {\n        const token = regexMatch[0]; // @ts-ignore\n\n        matches.push({\n          pattern: 'regex',\n          token,\n          i: regexMatch.index,\n          j: regexMatch.index + regexMatch[0].length - 1,\n          regexName: name,\n          regexMatch\n        });\n      }\n    });\n    return sorted(matches);\n  }\n\n}\n\nexport default MatchRegex;\n//# sourceMappingURL=Regex.esm.js.map\n","import { REFERENCE_YEAR, DATE_MIN_YEAR, DATE_MAX_YEAR, DATE_SPLITS } from '../data/const.esm.js';\nimport { sorted } from '../helper.esm.js';\n\n/*\n * -------------------------------------------------------------------------------\n *  date matching ----------------------------------------------------------------\n * -------------------------------------------------------------------------------\n */\n\nclass MatchDate {\n  /*\n   * a \"date\" is recognized as:\n   *   any 3-tuple that starts or ends with a 2- or 4-digit year,\n   *   with 2 or 0 separator chars (1.1.91 or 1191),\n   *   maybe zero-padded (01-01-91 vs 1-1-91),\n   *   a month between 1 and 12,\n   *   a day between 1 and 31.\n   *\n   * note: this isn't true date parsing in that \"feb 31st\" is allowed,\n   * this doesn't check for leap years, etc.\n   *\n   * recipe:\n   * start with regex to find maybe-dates, then attempt to map the integers\n   * onto month-day-year to filter the maybe-dates into dates.\n   * finally, remove matches that are substrings of other matches to reduce noise.\n   *\n   * note: instead of using a lazy or greedy regex to find many dates over the full string,\n   * this uses a ^...$ regex against every substring of the password -- less performant but leads\n   * to every possible date match.\n   */\n  match({\n    password\n  }) {\n    const matches = [...this.getMatchesWithoutSeparator(password), ...this.getMatchesWithSeparator(password)];\n    const filteredMatches = this.filterNoise(matches);\n    return sorted(filteredMatches);\n  }\n\n  getMatchesWithSeparator(password) {\n    const matches = [];\n    const maybeDateWithSeparator = /^(\\d{1,4})([\\s/\\\\_.-])(\\d{1,2})\\2(\\d{1,4})$/; // # dates with separators are between length 6 '1/1/91' and 10 '11/11/1991'\n\n    for (let i = 0; i <= Math.abs(password.length - 6); i += 1) {\n      for (let j = i + 5; j <= i + 9; j += 1) {\n        if (j >= password.length) {\n          break;\n        }\n\n        const token = password.slice(i, +j + 1 || 9e9);\n        const regexMatch = maybeDateWithSeparator.exec(token);\n\n        if (regexMatch != null) {\n          const dmy = this.mapIntegersToDayMonthYear([parseInt(regexMatch[1], 10), parseInt(regexMatch[3], 10), parseInt(regexMatch[4], 10)]);\n\n          if (dmy != null) {\n            // @ts-ignore\n            matches.push({\n              pattern: 'date',\n              token,\n              i,\n              j,\n              separator: regexMatch[2],\n              year: dmy.year,\n              month: dmy.month,\n              day: dmy.day\n            });\n          }\n        }\n      }\n    }\n\n    return matches;\n  } // eslint-disable-next-line max-statements\n\n\n  getMatchesWithoutSeparator(password) {\n    const matches = [];\n    const maybeDateNoSeparator = /^\\d{4,8}$/;\n\n    const metric = candidate => Math.abs(candidate.year - REFERENCE_YEAR); // # dates without separators are between length 4 '1191' and 8 '11111991'\n\n\n    for (let i = 0; i <= Math.abs(password.length - 4); i += 1) {\n      for (let j = i + 3; j <= i + 7; j += 1) {\n        if (j >= password.length) {\n          break;\n        }\n\n        const token = password.slice(i, +j + 1 || 9e9);\n\n        if (maybeDateNoSeparator.exec(token)) {\n          const candidates = [];\n          const index = token.length;\n          const splittedDates = DATE_SPLITS[index];\n          splittedDates.forEach(([k, l]) => {\n            const dmy = this.mapIntegersToDayMonthYear([parseInt(token.slice(0, k), 10), parseInt(token.slice(k, l), 10), parseInt(token.slice(l), 10)]);\n\n            if (dmy != null) {\n              candidates.push(dmy);\n            }\n          });\n\n          if (candidates.length > 0) {\n            /*\n             * at this point: different possible dmy mappings for the same i,j substring.\n             * match the candidate date that likely takes the fewest guesses: a year closest\n             * to 2000.\n             * (scoring.REFERENCE_YEAR).\n             *\n             * ie, considering '111504', prefer 11-15-04 to 1-1-1504\n             * (interpreting '04' as 2004)\n             */\n            let bestCandidate = candidates[0];\n            let minDistance = metric(candidates[0]);\n            candidates.slice(1).forEach(candidate => {\n              const distance = metric(candidate);\n\n              if (distance < minDistance) {\n                bestCandidate = candidate;\n                minDistance = distance;\n              }\n            }); // @ts-ignore\n\n            matches.push({\n              pattern: 'date',\n              token,\n              i,\n              j,\n              separator: '',\n              year: bestCandidate.year,\n              month: bestCandidate.month,\n              day: bestCandidate.day\n            });\n          }\n        }\n      }\n    }\n\n    return matches;\n  }\n  /*\n   * matches now contains all valid date strings in a way that is tricky to capture\n   * with regexes only. while thorough, it will contain some unintuitive noise:\n   *\n   * '2015_06_04', in addition to matching 2015_06_04, will also contain\n   * 5(!) other date matches: 15_06_04, 5_06_04, ..., even 2015 (matched as 5/1/2020)\n   *\n   * to reduce noise, remove date matches that are strict substrings of others\n   */\n\n\n  filterNoise(matches) {\n    return matches.filter(match => {\n      let isSubmatch = false;\n      const matchesLength = matches.length;\n\n      for (let o = 0; o < matchesLength; o += 1) {\n        const otherMatch = matches[o];\n\n        if (match !== otherMatch) {\n          if (otherMatch.i <= match.i && otherMatch.j >= match.j) {\n            isSubmatch = true;\n            break;\n          }\n        }\n      }\n\n      return !isSubmatch;\n    });\n  }\n  /*\n   * given a 3-tuple, discard if:\n   *   middle int is over 31 (for all dmy formats, years are never allowed in the middle)\n   *   middle int is zero\n   *   any int is over the max allowable year\n   *   any int is over two digits but under the min allowable year\n   *   2 integers are over 31, the max allowable day\n   *   2 integers are zero\n   *   all integers are over 12, the max allowable month\n   */\n  // eslint-disable-next-line complexity, max-statements\n\n\n  mapIntegersToDayMonthYear(integers) {\n    if (integers[1] > 31 || integers[1] <= 0) {\n      return null;\n    }\n\n    let over12 = 0;\n    let over31 = 0;\n    let under1 = 0;\n\n    for (let o = 0, len1 = integers.length; o < len1; o += 1) {\n      const int = integers[o];\n\n      if (int > 99 && int < DATE_MIN_YEAR || int > DATE_MAX_YEAR) {\n        return null;\n      }\n\n      if (int > 31) {\n        over31 += 1;\n      }\n\n      if (int > 12) {\n        over12 += 1;\n      }\n\n      if (int <= 0) {\n        under1 += 1;\n      }\n    }\n\n    if (over31 >= 2 || over12 === 3 || under1 >= 2) {\n      return null;\n    }\n\n    return this.getDayMonth(integers);\n  } // eslint-disable-next-line max-statements\n\n\n  getDayMonth(integers) {\n    // first look for a four digit year: yyyy + daymonth or daymonth + yyyy\n    const possibleYearSplits = [[integers[2], integers.slice(0, 2)], [integers[0], integers.slice(1, 3)]];\n    const possibleYearSplitsLength = possibleYearSplits.length;\n\n    for (let j = 0; j < possibleYearSplitsLength; j += 1) {\n      const [y, rest] = possibleYearSplits[j];\n\n      if (DATE_MIN_YEAR <= y && y <= DATE_MAX_YEAR) {\n        const dm = this.mapIntegersToDayMonth(rest);\n\n        if (dm != null) {\n          return {\n            year: y,\n            month: dm.month,\n            day: dm.day\n          };\n        }\n        /*\n         * for a candidate that includes a four-digit year,\n         * when the remaining integers don't match to a day and month,\n         * it is not a date.\n         */\n\n\n        return null;\n      }\n    } // given no four-digit year, two digit years are the most flexible int to match, so\n    // try to parse a day-month out of integers[0..1] or integers[1..0]\n\n\n    for (let k = 0; k < possibleYearSplitsLength; k += 1) {\n      const [y, rest] = possibleYearSplits[k];\n      const dm = this.mapIntegersToDayMonth(rest);\n\n      if (dm != null) {\n        return {\n          year: this.twoToFourDigitYear(y),\n          month: dm.month,\n          day: dm.day\n        };\n      }\n    }\n\n    return null;\n  }\n\n  mapIntegersToDayMonth(integers) {\n    const temp = [integers, integers.slice().reverse()];\n\n    for (let i = 0; i < temp.length; i += 1) {\n      const data = temp[i];\n      const day = data[0];\n      const month = data[1];\n\n      if (day >= 1 && day <= 31 && month >= 1 && month <= 12) {\n        return {\n          day,\n          month\n        };\n      }\n    }\n\n    return null;\n  }\n\n  twoToFourDigitYear(year) {\n    if (year > 99) {\n      return year;\n    }\n\n    if (year > 50) {\n      // 87 -> 1987\n      return year + 1900;\n    } // 15 -> 2015\n\n\n    return year + 2000;\n  }\n\n}\n\nexport default MatchDate;\n//# sourceMappingURL=Date.esm.js.map\n","import { extend, sorted } from './helper.esm.js';\nimport MatchDictionary from './matching/Dictionary.esm.js';\nimport MatchL33t from './matching/L33t.esm.js';\nimport MatchDictionaryReverse from './matching/DictionaryReverse.esm.js';\nimport MatchSpatial from './matching/Spatial.esm.js';\nimport MatchRepeat from './matching/Repeat.esm.js';\nimport MatchSequence from './matching/Sequence.esm.js';\nimport MatchRegex from './matching/Regex.esm.js';\nimport MatchDate from './matching/Date.esm.js';\n\n/*\n * -------------------------------------------------------------------------------\n *  Omnimatch combine matchers ---------------------------------------------------------------\n * -------------------------------------------------------------------------------\n */\n\nclass Matching {\n  constructor() {\n    this.matchers = [MatchDictionary, MatchDictionaryReverse, MatchL33t, MatchSpatial, MatchRepeat, MatchSequence, MatchRegex, MatchDate];\n    this.options = {};\n  }\n\n  match(password) {\n    const matches = [];\n    this.matchers.forEach(Entry => {\n      const matcher = new Entry();\n      extend(matches, matcher.match({\n        password,\n        omniMatch: this\n      }));\n    });\n    return sorted(matches);\n  }\n\n}\n\nexport default Matching;\n//# sourceMappingURL=Matching.esm.js.map\n","import Options from './Options.esm.js';\n\nconst SECOND = 1;\nconst MINUTE = SECOND * 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\nconst MONTH = DAY * 31;\nconst YEAR = MONTH * 12;\nconst CENTURY = YEAR * 100;\nconst times = {\n  second: SECOND,\n  minute: MINUTE,\n  hour: HOUR,\n  day: DAY,\n  month: MONTH,\n  year: YEAR,\n  century: CENTURY\n};\n/*\n * -------------------------------------------------------------------------------\n *  Estimates time for an attacker ---------------------------------------------------------------\n * -------------------------------------------------------------------------------\n */\n\nclass TimeEstimates {\n  translate(displayStr, value) {\n    let key = displayStr;\n\n    if (value !== undefined && value !== 1) {\n      key += 's';\n    }\n\n    const {\n      timeEstimation\n    } = Options.translations;\n    return timeEstimation[key].replace('{base}', `${value}`);\n  }\n\n  estimateAttackTimes(guesses) {\n    const crackTimesSeconds = {\n      onlineThrottling100PerHour: guesses / (100 / 3600),\n      onlineNoThrottling10PerSecond: guesses / 10,\n      offlineSlowHashing1e4PerSecond: guesses / 1e4,\n      offlineFastHashing1e10PerSecond: guesses / 1e10\n    };\n    const crackTimesDisplay = {};\n    Object.keys(crackTimesSeconds).forEach(scenario => {\n      const seconds = crackTimesSeconds[scenario];\n      crackTimesDisplay[scenario] = this.displayTime(seconds);\n    });\n    return {\n      crackTimesSeconds,\n      crackTimesDisplay,\n      score: this.guessesToScore(guesses)\n    };\n  }\n\n  guessesToScore(guesses) {\n    const DELTA = 5;\n\n    if (guesses < 1e3 + DELTA) {\n      // risky password: \"too guessable\"\n      return 0;\n    }\n\n    if (guesses < 1e6 + DELTA) {\n      // modest protection from throttled online attacks: \"very guessable\"\n      return 1;\n    }\n\n    if (guesses < 1e8 + DELTA) {\n      // modest protection from unthrottled online attacks: \"somewhat guessable\"\n      return 2;\n    }\n\n    if (guesses < 1e10 + DELTA) {\n      // modest protection from offline attacks: \"safely unguessable\"\n      // assuming a salted, slow hash function like bcrypt, scrypt, PBKDF2, argon, etc\n      return 3;\n    } // strong protection from offline attacks under same scenario: \"very unguessable\"\n\n\n    return 4;\n  }\n\n  displayTime(seconds) {\n    let displayStr = 'centuries';\n    let base;\n    const timeKeys = Object.keys(times);\n    const foundIndex = timeKeys.findIndex(time => seconds < times[time]);\n\n    if (foundIndex > -1) {\n      displayStr = timeKeys[foundIndex - 1];\n\n      if (foundIndex !== 0) {\n        base = Math.round(seconds / times[displayStr]);\n      } else {\n        displayStr = 'ltSecond';\n      }\n    }\n\n    return this.translate(displayStr, base);\n  }\n\n}\n\nexport default TimeEstimates;\n//# sourceMappingURL=TimeEstimates.esm.js.map\n","import { START_UPPER, ALL_UPPER_INVERTED } from './data/const.esm.js';\nimport Options from './Options.esm.js';\n\n/*\n * -------------------------------------------------------------------------------\n *  Generate feedback ---------------------------------------------------------------\n * -------------------------------------------------------------------------------\n */\n\nclass Feedback {\n  constructor() {\n    this.defaultFeedback = {\n      warning: '',\n      suggestions: []\n    };\n    this.setDefaultSuggestions();\n  }\n\n  setDefaultSuggestions() {\n    this.defaultFeedback.suggestions.push(Options.translations.suggestions.useWords, Options.translations.suggestions.noNeed);\n  }\n\n  getFeedback(score, sequence) {\n    if (sequence.length === 0) {\n      return this.defaultFeedback;\n    }\n\n    if (score > 2) {\n      return {\n        warning: '',\n        suggestions: []\n      };\n    }\n\n    const extraFeedback = Options.translations.suggestions.anotherWord;\n    const longestMatch = this.getLongestMatch(sequence);\n    let feedback = this.getMatchFeedback(longestMatch, sequence.length === 1);\n\n    if (feedback !== null && feedback !== undefined) {\n      feedback.suggestions.unshift(extraFeedback);\n\n      if (feedback.warning == null) {\n        feedback.warning = '';\n      }\n    } else {\n      feedback = {\n        warning: '',\n        suggestions: [extraFeedback]\n      };\n    }\n\n    return feedback;\n  }\n\n  getLongestMatch(sequence) {\n    let longestMatch = sequence[0];\n    const slicedSequence = sequence.slice(1);\n    slicedSequence.forEach(match => {\n      if (match.token.length > longestMatch.token.length) {\n        longestMatch = match;\n      }\n    });\n    return longestMatch;\n  }\n\n  getMatchFeedback(match, isSoleMatch) {\n    switch (match.pattern) {\n      case 'dictionary':\n        return this.getDictionaryMatchFeedback(match, isSoleMatch);\n\n      case 'spatial':\n        return this.getSpatialMatchFeedback(match);\n\n      case 'repeat':\n        return this.getRepeatMatchFeedback(match);\n\n      case 'sequence':\n        return {\n          warning: Options.translations.warnings.sequences,\n          suggestions: [Options.translations.suggestions.sequences]\n        };\n\n      case 'regex':\n        if (match.regexName === 'recentYear') {\n          return {\n            warning: Options.translations.warnings.recentYears,\n            suggestions: [Options.translations.suggestions.recentYears, Options.translations.suggestions.associatedYears]\n          };\n        }\n\n        break;\n\n      case 'date':\n        return {\n          warning: Options.translations.warnings.dates,\n          suggestions: [Options.translations.suggestions.dates]\n        };\n\n      default:\n        return {\n          warning: '',\n          suggestions: []\n        };\n    }\n\n    return {\n      warning: '',\n      suggestions: []\n    };\n  }\n\n  getSpatialMatchFeedback(match) {\n    let warning = Options.translations.warnings.keyPattern;\n\n    if (match.turns === 1) {\n      warning = Options.translations.warnings.straightRow;\n    }\n\n    return {\n      warning,\n      suggestions: [Options.translations.suggestions.longerKeyboardPattern]\n    };\n  }\n\n  getRepeatMatchFeedback(match) {\n    let warning = Options.translations.warnings.extendedRepeat;\n\n    if (match.baseToken.length === 1) {\n      warning = Options.translations.warnings.simpleRepeat;\n    }\n\n    return {\n      warning,\n      suggestions: [Options.translations.suggestions.repeated]\n    };\n  }\n\n  getDictionaryMatchFeedback(match, isSoleMatch) {\n    const warning = this.getDictionaryWarning(match, isSoleMatch);\n    const suggestions = [];\n    const word = match.token;\n\n    if (word.match(START_UPPER)) {\n      suggestions.push(Options.translations.suggestions.capitalization);\n    } else if (word.match(ALL_UPPER_INVERTED) && word.toLowerCase() !== word) {\n      suggestions.push(Options.translations.suggestions.allUppercase);\n    }\n\n    if (match.reversed && match.token.length >= 4) {\n      suggestions.push(Options.translations.suggestions.reverseWords);\n    }\n\n    if (match.l33t) {\n      suggestions.push(Options.translations.suggestions.l33t);\n    }\n\n    return {\n      warning,\n      suggestions\n    };\n  }\n\n  getDictionaryWarning(match, isSoleMatch) {\n    let warning = '';\n    const dictName = match.dictionaryName;\n\n    if (dictName === 'passwords') {\n      warning = this.getDictionaryWarningPassword(match, isSoleMatch);\n    } else if (dictName.includes('wikipedia')) {\n      warning = this.getDictionaryWarningWikipedia(match, isSoleMatch);\n    } else if (dictName === 'lastnames' || dictName.toLowerCase().includes('firstnames')) {\n      warning = this.getDictionaryWarningNames(match, isSoleMatch);\n    }\n\n    return warning;\n  }\n\n  getDictionaryWarningPassword(match, isSoleMatch) {\n    let warning = '';\n\n    if (isSoleMatch && !match.l33t && !match.reversed) {\n      if (match.rank <= 10) {\n        warning = Options.translations.warnings.topTen;\n      } else if (match.rank <= 100) {\n        warning = Options.translations.warnings.topHundred;\n      } else {\n        warning = Options.translations.warnings.common;\n      }\n    } else if (match.guessesLog10 <= 4) {\n      warning = Options.translations.warnings.similarToCommon;\n    }\n\n    return warning;\n  }\n\n  getDictionaryWarningWikipedia(match, isSoleMatch) {\n    let warning = '';\n\n    if (isSoleMatch) {\n      warning = Options.translations.warnings.wordByItself;\n    }\n\n    return warning;\n  }\n\n  getDictionaryWarningNames(match, isSoleMatch) {\n    if (isSoleMatch) {\n      return Options.translations.warnings.namesByThemselves;\n    }\n\n    return Options.translations.warnings.commonNames;\n  }\n\n}\n\nexport default Feedback;\n//# sourceMappingURL=Feedback.esm.js.map\n","import Matching from './Matching.esm.js';\nimport scoring from './scoring.esm.js';\nimport TimeEstimates from './TimeEstimates.esm.js';\nimport Feedback from './Feedback.esm.js';\nexport { default as ZxcvbnOptions } from './Options.esm.js';\n\nconst time = () => new Date().getTime();\n\nconst zxcvbn = password => {\n  const feedback = new Feedback();\n  const matching = new Matching();\n  const timeEstimates = new TimeEstimates();\n  const start = time();\n  const matches = matching.match(password);\n  const matchSequence = scoring.mostGuessableMatchSequence(password, matches);\n  const calcTime = time() - start;\n  const attackTimes = timeEstimates.estimateAttackTimes(matchSequence.guesses);\n  return {\n    calcTime,\n    ...matchSequence,\n    ...attackTimes,\n    feedback: feedback.getFeedback(attackTimes.score, matchSequence.sequence)\n  };\n};\n\nexport { zxcvbn };\n//# sourceMappingURL=index.esm.js.map\n","/*\n * This file is part of glowingblue/password-strength.\n *\n * Copyright (c) 2021 Rafael Horvat.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport Component from 'flarum/common/Component';\n\nexport default class StrengthIndicator extends Component {\n\tview() {\n\t\tconst { label, color } = this.attrs;\n\t\treturn (\n\t\t\t<div className={`StrengthIndicator ${label ? 'active' : ''}`}>\n\t\t\t\t<div className='StrengthIndicator-container'>\n\t\t\t\t\t<div className='StrengthIndicator-pills'>\n\t\t\t\t\t\t{['weak', 'medium', 'strong'].map((key) => (\n\t\t\t\t\t\t\t<StrengthPill color={color} active={this.isPillActive(key)} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='StrengthIndicator-label'>\n\t\t\t\t\t\t<span>{label}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tisPillActive(key) {\n\t\tconst { score } = this.attrs;\n\t\tswitch (key) {\n\t\t\tcase 'weak':\n\t\t\t\tif (Number.isInteger(score)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\tcase 'medium':\n\t\t\t\tif (score >= 2) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\tcase 'strong':\n\t\t\t\tif (score >= 4) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n}\n\nclass StrengthPill extends Component {\n\tview() {\n\t\tconst { color, active } = this.attrs;\n\t\tconst backgroundColor = active ? color : undefined;\n\t\treturn <div className='StrengthPill' style={{ backgroundColor }}></div>;\n\t}\n}\n","/*\n * This file is part of glowingblue/password-strength.\n *\n * Copyright (c) 2021 Rafael Horvat.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport Component from 'flarum/common/Component';\nimport Stream from 'flarum/common/utils/Stream';\nimport extractText from 'flarum/common/utils/extractText';\nimport { zxcvbn } from '@zxcvbn-ts/core'\nimport EyeButton from './EyeButton';\nimport StrengthIndicator from './StrengthIndicator';\nimport { slug } from '../../common';\n\n// Make translation calls shorter\nconst t = app.translator.trans.bind(app.translator);\nconst prfx = `${slug}.forum.strengthLabels`;\n// Make settings accessible easier\nconst settings = (key) => app.forum.attribute(`${slug}.${key}`);\n\nexport default class SignUpPasswordField extends Component {\n\toninit(vnode) {\n\t\tsuper.oninit(vnode);\n\n\t\tthis.strengthLabel = new Stream('');\n\t\tthis.passwordScore = new Stream(undefined);\n\t\tthis.strengthColor = new Stream('');\n\t}\n\n\tview() {\n\t\tconst { parent_this, showingPassword, hasConfirmFiled, isConfirmFiled } = this.attrs;\n\n\t\treturn (\n\t\t\t// This markup is copied from `flarum/components/LogInModal` and then\n\t\t\t// some things have been added.\n\t\t\t// !!! Please check for updates regularly !!!\n\n\t\t\t<div className='Form-group PasswordField'>\n\t\t\t\t<input\n\t\t\t\t\tclassName={`FormControl ${settings('enablePasswordToggle') ? 'togglable' : ''}`}\n\t\t\t\t\tname={isConfirmFiled ? 'confirmPassword' : 'password'}\n\t\t\t\t\ttype={showingPassword() ? 'text' : 'password'}\n\t\t\t\t\tplaceholder={\n\t\t\t\t\t\tisConfirmFiled\n\t\t\t\t\t\t\t? t('nearata-signup-confirm-password.forum.field_placeholder')\n\t\t\t\t\t\t\t: extractText(t('core.forum.sign_up.password_placeholder'))\n\t\t\t\t\t}\n\t\t\t\t\tvalue={isConfirmFiled ? parent_this.confirmPassword : parent_this.password()}\n\t\t\t\t\tdisabled={parent_this.loading}\n\t\t\t\t\toninput={this.inputHandler.bind(this)}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\tsettings('enableInputColor') &&\n\t\t\t\t\t\t\t!showingPassword() &&\n\t\t\t\t\t\t\t(!hasConfirmFiled || isConfirmFiled)\n\t\t\t\t\t\t\t\t? this.strengthColor()\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\tborderColor:\n\t\t\t\t\t\t\tsettings('enableInputBorderColor') &&\n\t\t\t\t\t\t\t(!hasConfirmFiled || isConfirmFiled)\n\t\t\t\t\t\t\t\t? this.strengthColor()\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t{settings('enablePasswordToggle') ? <EyeButton showing={showingPassword} /> : null}\n\n\t\t\t\t{!hasConfirmFiled || isConfirmFiled ? (\n\t\t\t\t\t<StrengthIndicator\n\t\t\t\t\t\tscore={this.passwordScore()}\n\t\t\t\t\t\tlabel={this.strengthLabel()}\n\t\t\t\t\t\tcolor={this.strengthColor()}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t);\n\t}\n\n\tinputHandler(e) {\n\t\tconst { parent_this, isConfirmFiled } = this.attrs;\n\n\t\tconst password = e.target.value;\n\n\t\tif (isConfirmFiled) {\n\t\t\tparent_this.confirmPassword = password;\n\t\t} else {\n\t\t\tparent_this.password(password);\n\t\t}\n\n\t\tif (password) {\n\t\t\t// Get the score of the password strength\n\t\t\tlet { score } = zxcvbn(password);\n\t\t\tthis.passwordScore(score);\n\n\t\t\t// Define strength color & label\n\t\t\tswitch (score) {\n\t\t\t\tcase 0:\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.strengthLabel(t(`${prfx}.weak`));\n\t\t\t\t\tthis.strengthColor(`rgb(${settings('weakColor')})`);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.strengthLabel(t(`${prfx}.medium`));\n\t\t\t\t\tthis.strengthColor(`rgb(${settings('mediumColor')})`);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 4:\n\t\t\t\t\tthis.strengthLabel(t(`${prfx}.strong`));\n\t\t\t\t\tthis.strengthColor(`rgb(${settings('strongColor')})`);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.passwordScore(undefined);\n\t\t\tthis.strengthLabel('');\n\t\t\tthis.strengthColor(undefined);\n\t\t}\n\t}\n}\n","/*\n * This file is part of glowingblue/password-strength.\n *\n * Copyright (c) 2021 Rafael Horvat.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport app from 'flarum/common/app';\nimport { extend } from 'flarum/common/extend';\nimport LogInModal from 'flarum/forum/components/LogInModal';\nimport SignUpModal from 'flarum/forum/components/SignUpModal';\nimport Stream from 'flarum/common/utils/Stream';\nimport { slug } from '../common';\nimport LogInPasswordField from './components/LogInPasswordField';\nimport SignUpPasswordField from './components/SignUpPasswordField';\n\napp.initializers.add(slug, () => {\n\tfunction extendOninit() {\n\t\tthis.showingPassword = new Stream(false);\n\t}\n\textend(LogInModal.prototype, 'oninit', extendOninit);\n\textend(SignUpModal.prototype, 'oninit', extendOninit);\n\n\textend(LogInModal.prototype, 'fields', function (items) {\n\t\tif (app.forum.attribute(`${slug}.enablePasswordToggle`)) {\n\t\t\titems.replace(\n\t\t\t\t'password',\n\t\t\t\t<LogInPasswordField\n\t\t\t\t\tparent_this={this}\n\t\t\t\t\tshowingPassword={this.showingPassword.bind(this)}\n\t\t\t\t/>,\n\t\t\t\t20\n\t\t\t);\n\t\t}\n\t});\n\n\textend(SignUpModal.prototype, 'fields', function (items) {\n\t\tif (!this.attrs.token) {\n\t\t\tconst hasConfirmFiled =\n\t\t\t\titems.has('confirmPassword') && this.confirmPassword !== undefined;\n\n\t\t\titems.replace(\n\t\t\t\t'password',\n\t\t\t\t<SignUpPasswordField\n\t\t\t\t\tparent_this={this}\n\t\t\t\t\tshowingPassword={this.showingPassword.bind(this)}\n\t\t\t\t\thasConfirmFiled={hasConfirmFiled}\n\t\t\t\t/>,\n\t\t\t\t10\n\t\t\t);\n\n\t\t\tif (hasConfirmFiled) {\n\t\t\t\titems.replace(\n\t\t\t\t\t'confirmPassword',\n\t\t\t\t\t<SignUpPasswordField\n\t\t\t\t\t\tparent_this={this}\n\t\t\t\t\t\tshowingPassword={this.showingPassword.bind(this)}\n\t\t\t\t\t\thasConfirmFiled={hasConfirmFiled}\n\t\t\t\t\t\tisConfirmFiled={true}\n\t\t\t\t\t/>,\n\t\t\t\t\t10\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t});\n});\n"],"sourceRoot":""}